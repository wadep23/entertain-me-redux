{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\entertain-me-redux\\\\client\\\\src\\\\pages\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { ADD_FRIEND, REMOVE_MOVIE, REMOVE_TV_SHOW, REMOVE_GAME } from \"../utils/mutations\";\nimport { QUERY_SELF, QUERY_USER } from \"../utils/queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { Container, Card, Button, Row, Col } from \"react-bootstrap\";\nimport MovieModal from '../components/MovieModal';\nimport TvModal from '../components/TvModal';\nimport GameModal from '../components/GameModal';\nimport FriendList from \"../components/FriendsList\";\nimport Auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    username: userParam\n  } = useParams();\n  const [showMovieTrailerModal, setShowMovieTrailerModal] = useState(false);\n  const [movieTrailerModalTitle, setMovieTrailerModalTitle] = useState('');\n  const [showTvTrailerModal, setShowTvTrailerModal] = useState(false);\n  const [tvTrailerModalTitle, setTvTrailerModalTitle] = useState('');\n  const [showGameTrailerModal, setShowGameTrailerModal] = useState(false);\n  const [gameTrailerModalTitle, setGameTrailerModalTitle] = useState('');\n  const [addFriend] = useMutation(ADD_FRIEND);\n  const [deleteMovie] = useMutation(REMOVE_MOVIE);\n  const [deleteShow] = useMutation(REMOVE_TV_SHOW);\n  const [deleteGame] = useMutation(REMOVE_GAME);\n  const {\n    loading,\n    data\n  } = useQuery(userParam ? QUERY_USER : QUERY_SELF, {\n    variables: {\n      username: userParam\n    }\n  });\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || (data === null || data === void 0 ? void 0 : data.user) || {};\n\n  if (Auth.loggedIn() && Auth.getUserData().data.username === userParam) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!Auth.loggedIn()) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!(userData === null || userData === void 0 ? void 0 : userData.username)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"You need to be logged in to see this. Please select log in or sign up to view user profile page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  } // change the passed in value to something that can be unique to the content type ie. passed in value of mediaType and compare to favorite media array on user model\n\n\n  const handleDeleteMovie = async movieId => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteMovie({\n        variables: {\n          movieId: movieId\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleDeleteShow = async showId => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteShow({\n        variables: {\n          tvShowId: showId\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleDeleteGame = async gameId => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteGame({\n        variables: {\n          gameId: gameId\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: {\n          id: userData._id\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bg-dark text-secondary p-3 display-inline-block text-center\",\n          children: [\"Welcome to \", userParam ? `${userData.username}'s` : 'your', \" Profile!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-loc\",\n        children: userParam && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          size: \"lg\",\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-3 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(FriendList, {\n          username: userData.username,\n          friendCount: userData.friendCount,\n          friends: userData.friends\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userData.favoriteMovies.length ? `Viewing ${userData.favoriteMovies.length} saved ${userData.favoriteMovies.length === 1 ? \"Movie\" : \"Movies\"}:` : \"You have no saved Movies!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          fluid: \"true\",\n          children: userData.favoriteMovies.map(user => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '18rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  src: user.moviePoster,\n                  alt: `The poster for ${user.movieName}`,\n                  variant: \"top\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: user.movieName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: user.movieDetails\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"Rating: \", user.movieRating]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-block btn-danger\",\n                    onClick: () => handleDeleteMovie(user.movieId),\n                    children: \"Delete this Movie!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => {\n                      setShowMovieTrailerModal(true);\n                      setMovieTrailerModalTitle(user.movieName + \" Movie Trailer\");\n                    },\n                    children: \"Watch a trailer!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, user.movieId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MovieModal, {\n        showMovieTrailerModal: showMovieTrailerModal,\n        setShowMovieTrailerModal: setShowMovieTrailerModal,\n        movieTrailerModalTitle: movieTrailerModalTitle,\n        setMovieTrailerModalTitle: setMovieTrailerModalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userData.favoriteTvShows.length ? `Viewing ${userData.favoriteTvShows.length} saved ${userData.favoriteTvShows.length === 1 ? \"T.V. show\" : \"T.V. shows\"}:` : \"You have no saved T.V. Shows!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          fluid: \"true\",\n          children: userData.favoriteTvShows.map(user => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '18rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  src: user.tvShowPoster,\n                  alt: `The poster for ${user.tvShowName}`,\n                  variant: \"top\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: user.tvShowName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: user.tvShowDetails\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"Rating: \", user.tvShowRating]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-block btn-danger\",\n                    onClick: () => handleDeleteShow(user.tvShowId),\n                    children: \"Delete this T.V. Show!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => {\n                      setShowTvTrailerModal(true);\n                      setTvTrailerModalTitle(user.tvShowName + \" Show Trailer\");\n                    },\n                    children: \"Watch a trailer!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)]\n              }, user.tvShowId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TvModal, {\n        showTvTrailerModal: showTvTrailerModal,\n        setShowTvTrailerModal: setShowTvTrailerModal,\n        tvTrailerModalTitle: tvTrailerModalTitle,\n        setTvTrailerModalTitle: setTvTrailerModalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userData.favoriteGames.length ? `Viewing ${userData.favoriteGames.length} saved ${userData.favoriteGames.length === 1 ? \"game\" : \"games\"}:` : \"You have no saved Games!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          fluid: \"true\",\n          children: userData.favoriteGames.map(user => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '18rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  src: user.gamePoster,\n                  alt: `The poster for ${user.gameName}`,\n                  variant: \"top\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: user.gameName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"Rating: \", user.gameRating]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-block btn-danger\",\n                    onClick: () => handleDeleteGame(user.gameId),\n                    children: \"Delete this Game!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => {\n                      setShowGameTrailerModal(true);\n                      setGameTrailerModalTitle(user.gameName + \" game Trailer\");\n                    },\n                    children: \"Watch a trailer!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)]\n              }, user.gameId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GameModal, {\n        showGameTrailerModal: showGameTrailerModal,\n        setShowGameTrailerModal: setShowGameTrailerModal,\n        gameTrailerModalTitle: gameTrailerModalTitle,\n        setGameTrailerModalTitle: setGameTrailerModalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"QqZvs8FUT4ZE6pxv1tHyZXBscQE=\", false, function () {\n  return [useParams, useMutation, useMutation, useMutation, useMutation, useQuery];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/pages/Profile.js"],"names":["React","useState","Redirect","useParams","ADD_FRIEND","REMOVE_MOVIE","REMOVE_TV_SHOW","REMOVE_GAME","QUERY_SELF","QUERY_USER","useQuery","useMutation","Container","Card","Button","Row","Col","MovieModal","TvModal","GameModal","FriendList","Auth","Profile","username","userParam","showMovieTrailerModal","setShowMovieTrailerModal","movieTrailerModalTitle","setMovieTrailerModalTitle","showTvTrailerModal","setShowTvTrailerModal","tvTrailerModalTitle","setTvTrailerModalTitle","showGameTrailerModal","setShowGameTrailerModal","gameTrailerModalTitle","setGameTrailerModalTitle","addFriend","deleteMovie","deleteShow","deleteGame","loading","data","variables","userData","me","user","loggedIn","getUserData","handleDeleteMovie","movieId","token","retrieveToken","err","console","error","handleDeleteShow","showId","tvShowId","handleDeleteGame","gameId","handleClick","id","_id","friendCount","friends","favoriteMovies","length","map","width","moviePoster","movieName","movieDetails","movieRating","favoriteTvShows","tvShowPoster","tvShowName","tvShowDetails","tvShowRating","favoriteGames","gamePoster","gameName","gameRating"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, useParams } from \"react-router-dom\";\nimport {\n  ADD_FRIEND,\n  REMOVE_MOVIE,\n  REMOVE_TV_SHOW,\n  REMOVE_GAME,\n} from \"../utils/mutations\";\nimport { QUERY_SELF, QUERY_USER } from \"../utils/queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport MovieModal from '../components/MovieModal';\nimport TvModal from '../components/TvModal';\nimport GameModal from '../components/GameModal';\nimport FriendList from \"../components/FriendsList\";\nimport Auth from \"../utils/auth\";\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const [showMovieTrailerModal, setShowMovieTrailerModal] = useState(false);\n  const [movieTrailerModalTitle, setMovieTrailerModalTitle] = useState('');\n  const [showTvTrailerModal, setShowTvTrailerModal] = useState(false);\n  const [tvTrailerModalTitle, setTvTrailerModalTitle] = useState('');\n  const [showGameTrailerModal, setShowGameTrailerModal] = useState(false);\n  const [gameTrailerModalTitle, setGameTrailerModalTitle] = useState('');\n\n  const [addFriend] = useMutation(ADD_FRIEND);\n  const [deleteMovie] = useMutation(REMOVE_MOVIE);\n  const [deleteShow] = useMutation(REMOVE_TV_SHOW);\n  const [deleteGame] = useMutation(REMOVE_GAME);\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_SELF , {\n    variables: { username: userParam },\n  });\n\n  const userData = data?.me || data?.user || {};\n\n  if (Auth.loggedIn() && Auth.getUserData().data.username === userParam) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  if (!Auth.loggedIn()) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!userData?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Please select log in or sign up to\n        view user profile page!\n      </h4>\n    );\n  }\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  // change the passed in value to something that can be unique to the content type ie. passed in value of mediaType and compare to favorite media array on user model\n  const handleDeleteMovie = async (movieId) => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n    \n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteMovie({\n        variables: { movieId: movieId }\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  };\n  \n  const handleDeleteShow = async (showId) => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n    \n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteShow({\n        variables: { tvShowId: showId }\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  };\n\n  const handleDeleteGame = async (gameId) => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n    \n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteGame({\n        variables: { gameId: gameId }\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  };\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: { id: userData._id },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <main>\n      <div>\n        <div className=\"flex-row mb-3\">\n          <h2 className=\"bg-dark text-secondary p-3 display-inline-block text-center\">\n            Welcome to {userParam ? `${userData.username}'s` : 'your'} Profile!\n          </h2>\n        </div>\n        <div className=\"btn-loc\">\n          {userParam && (\n            <button onClick={handleClick} size=\"lg\">\n              Add Friend\n            </button>\n          )}\n        </div>\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendList \n            username={userData.username}\n            friendCount={userData.friendCount}\n            friends={userData.friends}\n          />\n        </div>\n      <Container>\n        <h2>\n          {userData.favoriteMovies.length\n            ? `Viewing ${userData.favoriteMovies.length} saved ${\n              userData.favoriteMovies.length === 1 ? \"Movie\" : \"Movies\"\n              }:`\n              : \"You have no saved Movies!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteMovies.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.movieId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.moviePoster} alt={`The poster for ${user.movieName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                      <Card.Title>{user.movieName}</Card.Title>\n                      <Card.Text>{user.movieDetails}</Card.Text>\n                      <Card.Text>Rating: {user.movieRating}</Card.Text>\n                      {Auth.loggedIn() && (\n                        <Button className=\"btn-block btn-danger\"\n                        onClick={() => handleDeleteMovie(user.movieId)}\n                        >Delete this Movie!\n                        </Button>\n                      )}\n                        <Button variant=\"primary\" \n                          onClick={() => {setShowMovieTrailerModal(true)\n                            setMovieTrailerModalTitle(user.movieName + \" Movie Trailer\"); }}\n                          >Watch a trailer!\n                        </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n      <MovieModal\n        showMovieTrailerModal={showMovieTrailerModal}\n        setShowMovieTrailerModal={setShowMovieTrailerModal}\n        movieTrailerModalTitle={movieTrailerModalTitle}\n        setMovieTrailerModalTitle={setMovieTrailerModalTitle}\n        ></MovieModal>  \n      <Container>\n        <h2>\n          {userData.favoriteTvShows.length\n            ? `Viewing ${userData.favoriteTvShows.length} saved ${\n              userData.favoriteTvShows.length === 1 ? \"T.V. show\" : \"T.V. shows\"\n              }:`\n            : \"You have no saved T.V. Shows!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteTvShows.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.tvShowId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.tvShowPoster} alt={`The poster for ${user.tvShowName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                    <Card.Title>{user.tvShowName}</Card.Title>\n                    <Card.Text>{user.tvShowDetails}</Card.Text>\n                    <Card.Text>Rating: {user.tvShowRating}</Card.Text>\n                    {Auth.loggedIn() && (\n                      <Button className=\"btn-block btn-danger\"\n                      onClick={() => handleDeleteShow(user.tvShowId)}\n                      >\n                        Delete this T.V. Show!\n                      </Button>\n                    )}\n                    <Button variant=\"primary\" onClick={() => {setShowTvTrailerModal(true)\n                    setTvTrailerModalTitle(user.tvShowName + \" Show Trailer\"); }}\n                    >Watch a trailer!</Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n      <TvModal\n        showTvTrailerModal={showTvTrailerModal}\n        setShowTvTrailerModal={setShowTvTrailerModal}\n        tvTrailerModalTitle={tvTrailerModalTitle}\n        setTvTrailerModalTitle={setTvTrailerModalTitle}\n        ></TvModal>\n      <Container>\n        <h2>\n          {userData.favoriteGames.length\n            ? `Viewing ${userData.favoriteGames.length} saved ${\n              userData.favoriteGames.length === 1 ? \"game\" : \"games\"\n            }:`\n            : \"You have no saved Games!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteGames.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.gameId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.gamePoster} alt={`The poster for ${user.gameName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                  <Card.Title>{user.gameName}</Card.Title>\n                    <Card.Text>Rating: {user.gameRating}</Card.Text>\n                    {Auth.loggedIn() && (\n                      <Button className=\"btn-block btn-danger\"\n                      onClick={() => handleDeleteGame(user.gameId)}\n                      >\n                      Delete this Game!\n                    </Button>\n                    )}\n                    <Button variant=\"primary\" \n                    onClick={() => {setShowGameTrailerModal(true)\n                    setGameTrailerModalTitle(user.gameName + \" game Trailer\"); }}\n                    >\n                      Watch a trailer!\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>   \n            );\n          })}\n        </Row>\n      </Container>\n      <GameModal\n        showGameTrailerModal={showGameTrailerModal}\n        setShowGameTrailerModal={setShowGameTrailerModal}\n        gameTrailerModalTitle={gameTrailerModalTitle}\n        setGameTrailerModalTitle={setGameTrailerModalTitle}\n      ></GameModal> \n      </div>\n    </main>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}