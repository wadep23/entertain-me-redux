{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\entertain-me-redux\\\\client\\\\src\\\\components\\\\Profile\\\\index.js\",\n    _s2 = $RefreshSig$();\n\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { ADD_FRIEND, REMOVE_MOVIE, REMOVE_TV_SHOW, REMOVE_GAME } from \"../../utils/mutations\";\nimport { QUERY_SELF, QUERY_USER } from \"../../utils/queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { Container, CardColumns, Card, Button } from \"react-bootstrap\";\nimport { removeMediaId } from \"../../utils/saveMedia\";\nimport Auth from \"../../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    username: userParam\n  } = useParams();\n  const [addFriend] = useMutation(ADD_FRIEND);\n  const [deleteContent] = useMutation(REMOVE_MOVIE, REMOVE_TV_SHOW, REMOVE_GAME);\n  const {\n    loading,\n    data\n  } = useQuery(userParam ? QUERY_SELF : QUERY_USER, {\n    variables: {\n      username: userParam\n    }\n  });\n  const user = (data === null || data === void 0 ? void 0 : data.me) || (data === null || data === void 0 ? void 0 : data.user) || {};\n\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!(user === null || user === void 0 ? void 0 : user.username)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"You need to be logged in to see this. Please select log in or sign up to view user profile page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } // change the passed in value to something that can be unique to the content type ie. passed in value of mediaType and compare to favorite media array on user model\n\n\n  const handleDeleteContent = async () => {\n    _s();\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    const {\n      movieId,\n      tvShowId,\n      gameId\n    } = useQuery(GET_SELF);\n\n    if (!token) {\n      return false;\n    }\n\n    if (movieId) {\n      await deleteContent({\n        variables: {\n          movieId: movieId\n        },\n        update: cache => {\n          const data = cache.readQuery({\n            query: GET_SELF\n          });\n          const userDataCache = data.me;\n          const savedMovieCache = userDataCache.favoriteMovies;\n          const updatedMoviesCache = savedMovieCache.filter(movie => movie.movieId !== movieId);\n          data.me.favoriteMovies = updatedMoviesCache;\n          cache.writeQuery({\n            query: GET_SELF,\n            data: {\n              data: { ...data.me.favoriteMovies\n              }\n            }\n          });\n        }\n      });\n      removeMediaId(movieId);\n    }\n\n    if (tvShowId) {\n      await deleteContent({\n        variables: {\n          tvShowId: tvShowId\n        },\n        update: cache => {\n          const data = cache.readQuery({\n            query: GET_SELF\n          });\n          const userDataCache = data.me;\n          const savedTvShowCache = userDataCache.favoriteTvShows;\n          const updatedTvShowCache = savedTvShowCache.filter(tv => tv.tvShowId !== tvShowId);\n          data.me.favoriteTvShows = updatedTvShowCache;\n          cache.writeQuery({\n            query: GET_SELF,\n            data: {\n              data: { ...data.me.favoriteTvShows\n              }\n            }\n          });\n        }\n      });\n      removeMediaId(tvShowId);\n    }\n\n    if (gameId) {\n      await deleteContent({\n        variables: {\n          gameId: gameId\n        },\n        update: cache => {\n          const data = cache.readQuery({\n            query: GET_SELF\n          });\n          const userDataCache = data.me;\n          const savedGameCache = userDataCache.favoriteGames;\n          const updatedGamesCache = savedGameCache.filter(game => game.gameId !== gameId);\n          data.me.favoriteGames = updatedGamesCache;\n          cache.writeQuery({\n            query: GET_SELF,\n            data: {\n              data: { ...data.me.favoriteGames\n              }\n            }\n          });\n        }\n      });\n      removeMediaId(gameId);\n    }\n  };\n\n  _s(handleDeleteContent, \"AxdEuclDRu6wi1hXarnFui6FMZs=\", false, function () {\n    return [useQuery];\n  });\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: {\n          id: user._id\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [`${user.username}'s`, \" Profile\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), userParam && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleClick,\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.favoriteMovies.length ? `Viewing ${userData.favoriteMovies.length} saved ${userData.favoriteMovies.length === 1 ? \"movie\" : \"movies\"}:` : \"You have no saved movies!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.favoriteMovies.map(user => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [user.moviePoster ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: user.moviePoster,\n              alt: `The cover for ${user.movieName}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: user.movieName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: user.movieDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteContent(user.movieId),\n                children: \"Delete this Movie!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, user.movieId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.favoriteTvShows.length ? `Viewing ${userData.favoriteTvShows.length} saved ${userData.favoriteTvShows.length === 1 ? \"tv show\" : \"tv shows\"}:` : \"You have no saved Tv Shows!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.favoriteTvShows.map(user => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [user.tvShowPoster ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: user.tvShowPoster,\n              alt: `The cover for ${user.tvShowName}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: user.tvShowName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: user.tvShowDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteContent(user.tvShowId),\n                children: \"Delete this Tv Show!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, user.tvShowId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.favoriteGames.length ? `Viewing ${userData.favoriteGames.length} saved ${userData.favoriteGames.length === 1 ? \"game\" : \"games\"}:` : \"You have no saved Games!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.favoriteGames.map(user => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [user.gamePoster ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: user.gamePoster,\n              alt: `The cover for ${user.gameName}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: user.gameName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: user.gameDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteContent(user.gameId),\n                children: \"Delete this Game!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, user.gameId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Profile, \"J4+5xbBlqaWmpmNzKZYf1Yj1izs=\", false, function () {\n  return [useParams, useMutation, useMutation, useQuery];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/components/Profile/index.js"],"names":["Redirect","useParams","ADD_FRIEND","REMOVE_MOVIE","REMOVE_TV_SHOW","REMOVE_GAME","QUERY_SELF","QUERY_USER","useQuery","useMutation","Container","CardColumns","Card","Button","removeMediaId","Auth","Profile","props","username","userParam","addFriend","deleteContent","loading","data","variables","user","me","loggedIn","getProfile","handleDeleteContent","token","getToken","movieId","tvShowId","gameId","GET_SELF","update","cache","readQuery","query","userDataCache","savedMovieCache","favoriteMovies","updatedMoviesCache","filter","movie","writeQuery","savedTvShowCache","favoriteTvShows","updatedTvShowCache","tv","savedGameCache","favoriteGames","updatedGamesCache","game","handleClick","id","_id","err","console","error","userData","length","map","moviePoster","movieName","movieDetails","tvShowPoster","tvShowName","tvShowDetails","gamePoster","gameName","gameDetails"],"mappings":"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","sourcesContent":["import { Redirect, useParams } from \"react-router-dom\";\r\nimport {\r\n  ADD_FRIEND,\r\n  REMOVE_MOVIE,\r\n  REMOVE_TV_SHOW,\r\n  REMOVE_GAME,\r\n} from \"../../utils/mutations\";\r\nimport { QUERY_SELF, QUERY_USER } from \"../../utils/queries\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { Container, CardColumns, Card, Button } from \"react-bootstrap\";\r\nimport { removeMediaId } from \"../../utils/saveMedia\";\r\nimport Auth from \"../../utils/auth\";\r\n\r\nconst Profile = (props) => {\r\n  const { username: userParam } = useParams();\r\n\r\n  const [addFriend] = useMutation(ADD_FRIEND);\r\n  const [deleteContent] = useMutation(\r\n    REMOVE_MOVIE,\r\n    REMOVE_TV_SHOW,\r\n    REMOVE_GAME\r\n  );\r\n  const { loading, data } = useQuery(userParam ? QUERY_SELF : QUERY_USER, {\r\n    variables: { username: userParam },\r\n  });\r\n\r\n  const user = data?.me || data?.user || {};\r\n\r\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user?.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this. Please select log in or sign up to\r\n        view user profile page!\r\n      </h4>\r\n    );\r\n  }\r\n  // change the passed in value to something that can be unique to the content type ie. passed in value of mediaType and compare to favorite media array on user model\r\n  const handleDeleteContent = async () => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n    const { movieId, tvShowId, gameId } = useQuery(GET_SELF);\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    if (movieId) {\r\n      await deleteContent({\r\n        variables: { movieId: movieId },\r\n        update: (cache) => {\r\n          const data = cache.readQuery({ query: GET_SELF });\r\n          const userDataCache = data.me;\r\n          const savedMovieCache = userDataCache.favoriteMovies;\r\n          const updatedMoviesCache = savedMovieCache.filter(\r\n            (movie) => movie.movieId !== movieId\r\n          );\r\n          data.me.favoriteMovies = updatedMoviesCache;\r\n          cache.writeQuery({\r\n            query: GET_SELF,\r\n            data: { data: { ...data.me.favoriteMovies } },\r\n          });\r\n        },\r\n      });\r\n      removeMediaId(movieId);\r\n    }\r\n    if (tvShowId) {\r\n      await deleteContent({\r\n        variables: { tvShowId: tvShowId },\r\n        update: (cache) => {\r\n          const data = cache.readQuery({ query: GET_SELF });\r\n          const userDataCache = data.me;\r\n          const savedTvShowCache = userDataCache.favoriteTvShows;\r\n          const updatedTvShowCache = savedTvShowCache.filter(\r\n            (tv) => tv.tvShowId !== tvShowId\r\n          );\r\n          data.me.favoriteTvShows = updatedTvShowCache;\r\n          cache.writeQuery({\r\n            query: GET_SELF,\r\n            data: { data: { ...data.me.favoriteTvShows } },\r\n          });\r\n        },\r\n      });\r\n      removeMediaId(tvShowId);\r\n    }\r\n    if (gameId) {\r\n      await deleteContent({\r\n        variables: { gameId: gameId },\r\n        update: (cache) => {\r\n          const data = cache.readQuery({ query: GET_SELF });\r\n          const userDataCache = data.me;\r\n          const savedGameCache = userDataCache.favoriteGames;\r\n          const updatedGamesCache = savedGameCache.filter(\r\n            (game) => game.gameId !== gameId\r\n          );\r\n          data.me.favoriteGames = updatedGamesCache;\r\n          cache.writeQuery({\r\n            query: GET_SELF,\r\n            data: { data: { ...data.me.favoriteGames } },\r\n          });\r\n        },\r\n      });\r\n      removeMediaId(gameId);\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      await addFriend({\r\n        variables: { id: user._id },\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div fluid className=\"text-light bg-dark\">\r\n        <Container>\r\n          <h2>{`${user.username}'s`} Profile</h2>\r\n          {userParam && (\r\n            <button className=\"btn\" onClick={handleClick}>\r\n              Add Friend\r\n            </button>\r\n          )}\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <h2>\r\n          {userData.favoriteMovies.length\r\n            ? `Viewing ${userData.favoriteMovies.length} saved ${\r\n                userData.favoriteMovies.length === 1 ? \"movie\" : \"movies\"\r\n              }:`\r\n            : \"You have no saved movies!\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.favoriteMovies.map((user) => {\r\n            return (\r\n              <Card key={user.movieId} border=\"dark\">\r\n                {user.moviePoster ? (\r\n                  <Card.Img\r\n                    src={user.moviePoster}\r\n                    alt={`The cover for ${user.movieName}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{user.movieName}</Card.Title>\r\n                  <Card.Text>{user.movieDetails}</Card.Text>\r\n                  <Button\r\n                    className=\"btn-block btn-danger\"\r\n                    onClick={() => handleDeleteContent(user.movieId)}\r\n                  >\r\n                    Delete this Movie!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n      <Container>\r\n        <h2>\r\n          {userData.favoriteTvShows.length\r\n            ? `Viewing ${userData.favoriteTvShows.length} saved ${\r\n                userData.favoriteTvShows.length === 1 ? \"tv show\" : \"tv shows\"\r\n              }:`\r\n            : \"You have no saved Tv Shows!\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.favoriteTvShows.map((user) => {\r\n            return (\r\n              <Card key={user.tvShowId} border=\"dark\">\r\n                {user.tvShowPoster ? (\r\n                  <Card.Img\r\n                    src={user.tvShowPoster}\r\n                    alt={`The cover for ${user.tvShowName}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{user.tvShowName}</Card.Title>\r\n                  <Card.Text>{user.tvShowDetails}</Card.Text>\r\n                  <Button\r\n                    className=\"btn-block btn-danger\"\r\n                    onClick={() => handleDeleteContent(user.tvShowId)}\r\n                  >\r\n                    Delete this Tv Show!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n      <Container>\r\n        <h2>\r\n          {userData.favoriteGames.length\r\n            ? `Viewing ${userData.favoriteGames.length} saved ${\r\n                userData.favoriteGames.length === 1 ? \"game\" : \"games\"\r\n              }:`\r\n            : \"You have no saved Games!\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.favoriteGames.map((user) => {\r\n            return (\r\n              <Card key={user.gameId} border=\"dark\">\r\n                {user.gamePoster ? (\r\n                  <Card.Img\r\n                    src={user.gamePoster}\r\n                    alt={`The cover for ${user.gameName}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{user.gameName}</Card.Title>\r\n                  <Card.Text>{user.gameDetails}</Card.Text>\r\n                  <Button\r\n                    className=\"btn-block btn-danger\"\r\n                    onClick={() => handleDeleteContent(user.gameId)}\r\n                  >\r\n                    Delete this Game!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}