{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\entertain-me-redux\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // import SignUpForm from \"./components/SignUpForm\";\n\nimport Auth from \"./utils/auth\";\nimport decode from \"jwt-decode\";\nimport Login from \"./pages/Login\";\nimport Navbar from \"./components/Navbar\";\nimport Profile from \"./pages/Profile\";\nimport Game from \"./pages/Game\";\nimport Movie from \"./pages/Movie\";\nimport Tv from \"./pages/Tv\"; // import { useQuery } from \"@apollo/react-hooks\";\n// import { QUERY_ME_SIDEWAYS } from \"./utils/queries\";\n// import { MOVIE_API_QUERY } from \"./utils/queries\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem(\"user_token\");\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  // const { data: userData } = useQuery(QUERY_ME_SIDEWAYS);\n  const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n  const user = decode(token);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/profile/:username?\",\n            component: Profile // username={newUserData.me.username}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/tv\",\n            component: Tv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/movie\",\n            component: Movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/game\",\n            component: Game\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => console.log(user.data.username),\n          children: \"Click Me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/App.js"],"names":["React","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","setContext","BrowserRouter","Router","Route","Switch","Auth","decode","Login","Navbar","Profile","Game","Movie","Tv","require","config","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App","loggedIn","retrieveToken","user","console","log","data","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import SignUpForm from \"./components/SignUpForm\";\nimport Auth from \"./utils/auth\";\nimport decode from \"jwt-decode\";\nimport Login from \"./pages/Login\";\nimport Navbar from \"./components/Navbar\";\nimport Profile from \"./pages/Profile\";\nimport Game from \"./pages/Game\";\nimport Movie from \"./pages/Movie\";\nimport Tv from \"./pages/Tv\";\n// import { useQuery } from \"@apollo/react-hooks\";\n// import { QUERY_ME_SIDEWAYS } from \"./utils/queries\";\n\n// import { MOVIE_API_QUERY } from \"./utils/queries\";\nrequire(\"dotenv\").config();\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"user_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  // const { data: userData } = useQuery(QUERY_ME_SIDEWAYS);\n  const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n  const user = decode(token);\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route\n              exact\n              path=\"/profile/:username?\"\n              component={Profile}\n              // username={newUserData.me.username}\n            />\n            <Route exact path=\"/tv\" component={Tv} />\n            <Route exact path=\"/movie\" component={Movie} />\n            <Route exact path=\"/game\" component={Game} />\n          </Switch>\n          <button\n            className=\"btn\"\n            onClick={() => console.log(user.data.username)}\n          >\n            Click Me!\n          </button>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}