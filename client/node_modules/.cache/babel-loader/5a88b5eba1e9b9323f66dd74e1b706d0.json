{"ast":null,"code":"import{Nav,Modal,Tab}from\"react-bootstrap\";import SignUpForm from\"../SignUpForm\";import LoginForm from\"../LoginForm\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UserModal=function UserModal(props){var showModal=props.showModal,setShowModal=props.setShowModal;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Modal,{size:\"lg\",show:showModal,onHide:function onHide(){return setShowModal(false);},\"aria-labelledby\":\"signup-modal\",dialogClassName:\"primaryModal\",children:/*#__PURE__*/_jsxs(Tab.Container,{defaultActiveKey:\"login\",id:\"modalContainer\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{id:\"signup-modal\",children:/*#__PURE__*/_jsxs(Nav,{variant:\"pills\",children:[/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:\"login\",children:\"Login\"})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:\"signup\",children:\"Sign Up\"})})]})})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Tab.Content,{children:[/*#__PURE__*/_jsx(Tab.Pane,{dialogueClassName:\"logButton\",eventKey:\"login\",children:/*#__PURE__*/_jsx(LoginForm,{handleModalClose:function handleModalClose(){return setShowModal(false);}})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"signup\",children:/*#__PURE__*/_jsx(SignUpForm,{handleModalClose:function handleModalClose(){return setShowModal(false);}})})]})})]})})});};export default UserModal;","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/components/Modal/index.js"],"names":["Nav","Modal","Tab","SignUpForm","LoginForm","UserModal","props","showModal","setShowModal"],"mappings":"AAAA,OAASA,GAAT,CAAcC,KAAd,CAAqBC,GAArB,KAAgC,iBAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAQC,CAAAA,SAAR,CAAoCD,KAApC,CAAQC,SAAR,CAAmBC,YAAnB,CAAoCF,KAApC,CAAmBE,YAAnB,CAEA,mBACE,sCACE,KAAC,KAAD,EACE,IAAI,CAAC,IADP,CAEE,IAAI,CAAED,SAFR,CAGE,MAAM,CAAE,wBAAMC,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAHV,CAIE,kBAAgB,cAJlB,CAKE,eAAe,CAAE,cALnB,uBAQE,MAAC,GAAD,CAAK,SAAL,EAAe,gBAAgB,CAAC,OAAhC,CAAwC,EAAE,CAAC,gBAA3C,wBACE,KAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,uBACE,KAAC,KAAD,CAAO,KAAP,EAAa,EAAE,CAAC,cAAhB,uBACE,MAAC,GAAD,EAAK,OAAO,CAAC,OAAb,wBACE,KAAC,GAAD,CAAK,IAAL,wBACE,KAAC,GAAD,CAAK,IAAL,EAAU,QAAQ,CAAC,OAAnB,mBADF,EADF,cAIE,KAAC,GAAD,CAAK,IAAL,wBACE,KAAC,GAAD,CAAK,IAAL,EAAU,QAAQ,CAAC,QAAnB,qBADF,EAJF,GADF,EADF,EADF,cAaE,KAAC,KAAD,CAAO,IAAP,wBACE,MAAC,GAAD,CAAK,OAAL,yBACE,KAAC,GAAD,CAAK,IAAL,EAAU,iBAAiB,CAAE,WAA7B,CAA0C,QAAQ,CAAC,OAAnD,uBACE,KAAC,SAAD,EAAW,gBAAgB,CAAE,kCAAMA,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAA7B,EADF,EADF,cAIE,KAAC,GAAD,CAAK,IAAL,EAAU,QAAQ,CAAC,QAAnB,uBACE,KAAC,UAAD,EAAY,gBAAgB,CAAE,kCAAMA,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAA9B,EADF,EAJF,GADF,EAbF,GARF,EADF,EADF,CAqCD,CAxCD,CA0CA,cAAeH,CAAAA,SAAf","sourcesContent":["import { Nav, Modal, Tab } from \"react-bootstrap\";\nimport SignUpForm from \"../SignUpForm\";\nimport LoginForm from \"../LoginForm\";\n\nconst UserModal = (props) => {\n  const { showModal, setShowModal } = props;\n\n  return (\n    <>\n      <Modal\n        size=\"lg\"\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby=\"signup-modal\"\n        dialogClassName={\"primaryModal\"}\n      >\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey=\"login\" id=\"modalContainer\">\n          <Modal.Header closeButton>\n            <Modal.Title id=\"signup-modal\">\n              <Nav variant=\"pills\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"login\">Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"signup\">Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane dialogueClassName={\"logButton\"} eventKey=\"login\">\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"signup\">\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserModal;\n"]},"metadata":{},"sourceType":"module"}