{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\entertain-me-redux\\\\client\\\\src\\\\pages\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { ADD_FRIEND, REMOVE_MOVIE, REMOVE_TV_SHOW, REMOVE_GAME } from \"../utils/mutations\";\nimport { QUERY_SELF, QUERY_USER } from \"../utils/queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { Container, CardColumns, Card, Button, Row, Col } from \"react-bootstrap\";\nimport MovieModal from '../components/MovieModal';\nimport TvModal from '../components/TvModal';\nimport GameModal from '../components/GameModal';\nimport FriendList from \"../components/FriendsList\";\nimport Auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    username: userParam\n  } = useParams();\n  const [showMovieTrailerModal, setShowMovieTrailerModal] = useState(false);\n  const [movieTrailerModalTitle, setMovieTrailerModalTitle] = useState('');\n  const [showTvTrailerModal, setShowTvTrailerModal] = useState(false);\n  const [tvTrailerModalTitle, setTvTrailerModalTitle] = useState('');\n  const [showGameTrailerModal, setShowGameTrailerModal] = useState(false);\n  const [gameTrailerModalTitle, setGameTrailerModalTitle] = useState('');\n  const [addFriend] = useMutation(ADD_FRIEND);\n  const [deleteContent] = useMutation(REMOVE_MOVIE, REMOVE_TV_SHOW, REMOVE_GAME);\n  const {\n    loading,\n    data\n  } = useQuery(userParam ? QUERY_USER : QUERY_SELF, {\n    variables: {\n      username: userParam\n    }\n  });\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || (data === null || data === void 0 ? void 0 : data.user) || {};\n\n  if (Auth.loggedIn() && Auth.getUserData().data.username === userParam) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!Auth.loggedIn()) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!(userData === null || userData === void 0 ? void 0 : userData.username)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"You need to be logged in to see this. Please select log in or sign up to view user profile page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(userData); // change the passed in value to something that can be unique to the content type ie. passed in value of mediaType and compare to favorite media array on user model\n\n  const handleDeleteContent = async () => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n    const movieId = userData.favoriteMovies.movieId;\n    const tvShowId = userData.favoriteTvShows.tvShowId;\n    const gameId = userData.favoriteGames.gameId;\n\n    if (!token) {\n      return false;\n    }\n\n    if (movieId) {\n      await deleteContent({\n        variables: {\n          movieId: movieId\n        },\n        update: cache => {\n          const data = cache.readQuery({\n            query: QUERY_SELF\n          });\n          const userDataCache = data.me;\n          const savedMovieCache = userDataCache.favoriteMovies;\n          const updatedMoviesCache = savedMovieCache.filter(movie => movie.movieId !== movieId);\n          data.me.favoriteMovies = updatedMoviesCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: {\n              data: { ...data.me.favoriteMovies\n              }\n            }\n          });\n        }\n      });\n    }\n\n    if (tvShowId) {\n      await deleteContent({\n        variables: {\n          tvShowId: tvShowId\n        },\n        update: cache => {\n          const data = cache.readQuery({\n            query: QUERY_SELF\n          });\n          const userDataCache = data.me;\n          const savedTvShowCache = userDataCache.favoriteTvShows;\n          const updatedTvShowCache = savedTvShowCache.filter(tv => tv.tvShowId !== tvShowId);\n          data.me.favoriteTvShows = updatedTvShowCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: {\n              data: { ...data.me.favoriteTvShows\n              }\n            }\n          });\n        }\n      });\n    }\n\n    if (gameId) {\n      await deleteContent({\n        variables: {\n          gameId: gameId\n        },\n        update: cache => {\n          const data = cache.readQuery({\n            query: QUERY_SELF\n          });\n          const userDataCache = data.me;\n          const savedGameCache = userDataCache.favoriteGames;\n          const updatedGamesCache = savedGameCache.filter(game => game.gameId !== gameId);\n          data.me.favoriteGames = updatedGamesCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: {\n              data: { ...data.me.favoriteGames\n              }\n            }\n          });\n        }\n      });\n    }\n  };\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: {\n          id: userData._id\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bg-dark text-secondary p-3 display-inline-block text-center\",\n          children: [\"Welcome to \", userParam ? `${userData.username}'s` : 'your', \" Profile!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-loc\",\n        children: userParam && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          size: \"lg\",\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userData.favoriteMovies.length ? `Viewing ${userData.favoriteMovies.length} saved ${userData.favoriteMovies.length === 1 ? \"Movie\" : \"Movies\"}:` : \"You have no saved Movies!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          fluid: \"true\",\n          children: userData.favoriteMovies.map(user => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '18rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  src: user.moviePoster,\n                  alt: `The poster for ${user.movieName}`,\n                  variant: \"top\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: user.movieName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: user.movieDetails\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"Rating: \", user.movieRating]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-block btn-danger\",\n                    onClick: () => handleDeleteContent(user.movieId),\n                    children: \"Delete this Movie!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => {\n                      setShowMovieTrailerModal(true);\n                      setMovieTrailerModalTitle(user.movieName + \" Movie Trailer\");\n                    },\n                    children: \"Watch a trailer!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)]\n              }, user.movieId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MovieModal, {\n        showMovieTrailerModal: showMovieTrailerModal,\n        setShowMovieTrailerModal: setShowMovieTrailerModal,\n        movieTrailerModalTitle: movieTrailerModalTitle,\n        setMovieTrailerModalTitle: setMovieTrailerModalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userData.favoriteTvShows.length ? `Viewing ${userData.favoriteTvShows.length} saved ${userData.favoriteTvShows.length === 1 ? \"T.V. show\" : \"T.V. shows\"}:` : \"You have no saved T.V. Shows!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          fluid: \"true\",\n          children: userData.favoriteTvShows.map(user => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '18rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  src: user.tvShowPoster,\n                  alt: `The poster for ${user.tvShowName}`,\n                  variant: \"top\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: user.tvShowName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: user.tvShowDetails\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"Rating: \", user.tvShowRating]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-block btn-danger\",\n                    onClick: () => handleDeleteContent(user.tvShowId),\n                    children: \"Delete this T.V. Show!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => {\n                      setShowTvTrailerModal(true);\n                      setTvTrailerModalTitle(user.tvShowName + \" Show Trailer\");\n                    },\n                    children: \"Watch a trailer!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)]\n              }, user.tvShowId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TvModal, {\n        showTvTrailerModal: showTvTrailerModal,\n        setShowTvTrailerModal: setShowTvTrailerModal,\n        tvTrailerModalTitle: tvTrailerModalTitle,\n        setTvTrailerModalTitle: setTvTrailerModalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userData.favoriteGames.length ? `Viewing ${userData.favoriteGames.length} saved ${userData.favoriteGames.length === 1 ? \"game\" : \"games\"}:` : \"You have no saved Games!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          fluid: \"true\",\n          children: userData.favoriteGames.map(user => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '18rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  src: user.gamePoster,\n                  alt: `The poster for ${user.gameName}`,\n                  variant: \"top\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: user.gameName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"Rating: \", user.gameRating]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-block btn-danger\",\n                    onClick: () => handleDeleteContent(user.tvShowId),\n                    children: \"Delete this Game!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => {\n                      setShowGameTrailerModal(true);\n                      setGameTrailerModalTitle(user.gameName + \" game Trailer\");\n                    },\n                    children: \"Watch a trailer!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)]\n              }, user.gameId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GameModal, {\n        showGameTrailerModal: showGameTrailerModal,\n        setShowGameTrailerModal: setShowGameTrailerModal,\n        gameTrailerModalTitle: gameTrailerModalTitle,\n        setGameTrailerModalTitle: setGameTrailerModalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 col-lg-3 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(FriendList, {\n        username: userData.username,\n        friendCount: userData.friendCount,\n        friends: userData.friends\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"DOdGagwGNMfp0Ecf0CjHsGQo+Xo=\", false, function () {\n  return [useParams, useMutation, useMutation, useQuery];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/pages/Profile.js"],"names":["React","useState","useEffect","Redirect","useParams","ADD_FRIEND","REMOVE_MOVIE","REMOVE_TV_SHOW","REMOVE_GAME","QUERY_SELF","QUERY_USER","useQuery","useMutation","Container","CardColumns","Card","Button","Row","Col","MovieModal","TvModal","GameModal","FriendList","Auth","Profile","username","userParam","showMovieTrailerModal","setShowMovieTrailerModal","movieTrailerModalTitle","setMovieTrailerModalTitle","showTvTrailerModal","setShowTvTrailerModal","tvTrailerModalTitle","setTvTrailerModalTitle","showGameTrailerModal","setShowGameTrailerModal","gameTrailerModalTitle","setGameTrailerModalTitle","addFriend","deleteContent","loading","data","variables","userData","me","user","loggedIn","getUserData","console","log","handleDeleteContent","token","retrieveToken","movieId","favoriteMovies","tvShowId","favoriteTvShows","gameId","favoriteGames","update","cache","readQuery","query","userDataCache","savedMovieCache","updatedMoviesCache","filter","movie","writeQuery","savedTvShowCache","updatedTvShowCache","tv","savedGameCache","updatedGamesCache","game","handleClick","id","_id","err","error","length","map","width","moviePoster","movieName","movieDetails","movieRating","tvShowPoster","tvShowName","tvShowDetails","tvShowRating","gamePoster","gameName","gameRating","friendCount","friends"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,WAJF,QAKO,oBALP;AAMA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SACEC,SADF,EAEEC,WAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,GANF,QAOO,iBAPP;AAQA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,MAA0BtB,SAAS,EAAzC;AAEA,QAAM,CAACuB,qBAAD,EAAwBC,wBAAxB,IAAoD3B,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAAC4B,sBAAD,EAAyBC,yBAAzB,IAAsD7B,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAAC8B,kBAAD,EAAqBC,qBAArB,IAA8C/B,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACgC,mBAAD,EAAsBC,sBAAtB,IAAgDjC,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACkC,oBAAD,EAAuBC,uBAAvB,IAAkDnC,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACoC,qBAAD,EAAwBC,wBAAxB,IAAoDrC,QAAQ,CAAC,EAAD,CAAlE;AAEA,QAAM,CAACsC,SAAD,IAAc3B,WAAW,CAACP,UAAD,CAA/B;AACA,QAAM,CAACmC,aAAD,IAAkB5B,WAAW,CACjCN,YADiC,EAEjCC,cAFiC,EAGjCC,WAHiC,CAAnC;AAKA,QAAM;AAAEiC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoB/B,QAAQ,CAACe,SAAS,GAAGhB,UAAH,GAAgBD,UAA1B,EAAuC;AACvEkC,IAAAA,SAAS,EAAE;AAAElB,MAAAA,QAAQ,EAAEC;AAAZ;AAD4D,GAAvC,CAAlC;AAIA,QAAMkB,QAAQ,GAAG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,EAAN,MAAYH,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEI,IAAlB,KAA0B,EAA3C;;AAEA,MAAIvB,IAAI,CAACwB,QAAL,MAAmBxB,IAAI,CAACyB,WAAL,GAAmBN,IAAnB,CAAwBjB,QAAxB,KAAqCC,SAA5D,EAAuE;AACrE,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACH,IAAI,CAACwB,QAAL,EAAL,EAAsB;AACpB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAGD,MAAIN,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,EAACG,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEnB,QAAX,CAAJ,EAAyB;AACvB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAEDwB,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EA5CoB,CA6CpB;;AACA,QAAMO,mBAAmB,GAAG,YAAY;AACtC,UAAMC,KAAK,GAAG7B,IAAI,CAACwB,QAAL,KAAkBxB,IAAI,CAAC8B,aAAL,EAAlB,GAAyC,IAAvD;AAEA,UAAMC,OAAO,GACXV,QAAQ,CAACW,cAAT,CAAwBD,OAD1B;AAEA,UAAME,QAAQ,GACZZ,QAAQ,CAACa,eAAT,CAAyBD,QAD3B;AAEA,UAAME,MAAM,GACVd,QAAQ,CAACe,aAAT,CAAuBD,MADzB;;AAGA,QAAI,CAACN,KAAL,EAAY;AACV,aAAO,KAAP;AACD;;AAED,QAAIE,OAAJ,EAAa;AACX,YAAMd,aAAa,CAAC;AAClBG,QAAAA,SAAS,EAAE;AAAEW,UAAAA,OAAO,EAAEA;AAAX,SADO;AAElBM,QAAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,gBAAMnB,IAAI,GAAGmB,KAAK,CAACC,SAAN,CAAgB;AAAEC,YAAAA,KAAK,EAAEtD;AAAT,WAAhB,CAAb;AACA,gBAAMuD,aAAa,GAAGtB,IAAI,CAACG,EAA3B;AACA,gBAAMoB,eAAe,GAAGD,aAAa,CAACT,cAAtC;AACA,gBAAMW,kBAAkB,GAAGD,eAAe,CAACE,MAAhB,CACxBC,KAAD,IAAWA,KAAK,CAACd,OAAN,KAAkBA,OADJ,CAA3B;AAGAZ,UAAAA,IAAI,CAACG,EAAL,CAAQU,cAAR,GAAyBW,kBAAzB;AACAL,UAAAA,KAAK,CAACQ,UAAN,CAAiB;AACfN,YAAAA,KAAK,EAAEtD,UADQ;AAEfiC,YAAAA,IAAI,EAAE;AAAEA,cAAAA,IAAI,EAAE,EAAE,GAAGA,IAAI,CAACG,EAAL,CAAQU;AAAb;AAAR;AAFS,WAAjB;AAID;AAdiB,OAAD,CAAnB;AAgBD;;AACD,QAAIC,QAAJ,EAAc;AACZ,YAAMhB,aAAa,CAAC;AAClBG,QAAAA,SAAS,EAAE;AAAEa,UAAAA,QAAQ,EAAEA;AAAZ,SADO;AAElBI,QAAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,gBAAMnB,IAAI,GAAGmB,KAAK,CAACC,SAAN,CAAgB;AAAEC,YAAAA,KAAK,EAAEtD;AAAT,WAAhB,CAAb;AACA,gBAAMuD,aAAa,GAAGtB,IAAI,CAACG,EAA3B;AACA,gBAAMyB,gBAAgB,GAAGN,aAAa,CAACP,eAAvC;AACA,gBAAMc,kBAAkB,GAAGD,gBAAgB,CAACH,MAAjB,CACxBK,EAAD,IAAQA,EAAE,CAAChB,QAAH,KAAgBA,QADC,CAA3B;AAGAd,UAAAA,IAAI,CAACG,EAAL,CAAQY,eAAR,GAA0Bc,kBAA1B;AACAV,UAAAA,KAAK,CAACQ,UAAN,CAAiB;AACfN,YAAAA,KAAK,EAAEtD,UADQ;AAEfiC,YAAAA,IAAI,EAAE;AAAEA,cAAAA,IAAI,EAAE,EAAE,GAAGA,IAAI,CAACG,EAAL,CAAQY;AAAb;AAAR;AAFS,WAAjB;AAID;AAdiB,OAAD,CAAnB;AAgBD;;AACD,QAAIC,MAAJ,EAAY;AACV,YAAMlB,aAAa,CAAC;AAClBG,QAAAA,SAAS,EAAE;AAAEe,UAAAA,MAAM,EAAEA;AAAV,SADO;AAElBE,QAAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,gBAAMnB,IAAI,GAAGmB,KAAK,CAACC,SAAN,CAAgB;AAAEC,YAAAA,KAAK,EAAEtD;AAAT,WAAhB,CAAb;AACA,gBAAMuD,aAAa,GAAGtB,IAAI,CAACG,EAA3B;AACA,gBAAM4B,cAAc,GAAGT,aAAa,CAACL,aAArC;AACA,gBAAMe,iBAAiB,GAAGD,cAAc,CAACN,MAAf,CACvBQ,IAAD,IAAUA,IAAI,CAACjB,MAAL,KAAgBA,MADF,CAA1B;AAGAhB,UAAAA,IAAI,CAACG,EAAL,CAAQc,aAAR,GAAwBe,iBAAxB;AACAb,UAAAA,KAAK,CAACQ,UAAN,CAAiB;AACfN,YAAAA,KAAK,EAAEtD,UADQ;AAEfiC,YAAAA,IAAI,EAAE;AAAEA,cAAAA,IAAI,EAAE,EAAE,GAAGA,IAAI,CAACG,EAAL,CAAQc;AAAb;AAAR;AAFS,WAAjB;AAID;AAdiB,OAAD,CAAnB;AAgBD;AACF,GApED;;AAsEA,QAAMiB,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMrC,SAAS,CAAC;AACdI,QAAAA,SAAS,EAAE;AAAEkC,UAAAA,EAAE,EAAEjC,QAAQ,CAACkC;AAAf;AADG,OAAD,CAAf;AAGD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZ9B,MAAAA,OAAO,CAAC+B,KAAR,CAAcD,GAAd;AACD;AACF,GARD;;AAUA,MAAItC,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,6DAAd;AAAA,oCACcf,SAAS,GAAI,GAAEkB,QAAQ,CAACnB,QAAS,IAAxB,GAA8B,MADrD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGC,SAAS,iBACR;AAAQ,UAAA,OAAO,EAAEkD,WAAjB;AAA8B,UAAA,IAAI,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cANF,eAaA,QAAC,SAAD;AAAA,gCACE;AAAA,oBACGhC,QAAQ,CAACW,cAAT,CAAwB0B,MAAxB,GACI,WAAUrC,QAAQ,CAACW,cAAT,CAAwB0B,MAAO,UAC1CrC,QAAQ,CAACW,cAAT,CAAwB0B,MAAxB,KAAmC,CAAnC,GAAuC,OAAvC,GAAiD,QAChD,GAHJ,GAIK;AALR;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,oBACGrC,QAAQ,CAACW,cAAT,CAAwB2B,GAAxB,CAA6BpC,IAAD,IAAU;AACrC,gCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE,QAAC,IAAD;AAAyB,gBAAA,KAAK,EAAE;AAAEqC,kBAAAA,KAAK,EAAE;AAAT,iBAAhC;AAAA,wCACE,QAAC,IAAD,CAAM,GAAN;AAAU,kBAAA,GAAG,EAAErC,IAAI,CAACsC,WAApB;AAAiC,kBAAA,GAAG,EAAG,kBAAiBtC,IAAI,CAACuC,SAAU,EAAvE;AAA0E,kBAAA,OAAO,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAW,kBAAA,SAAS,EAAC,WAArB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA,8BAAavC,IAAI,CAACuC;AAAlB;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,8BAAYvC,IAAI,CAACwC;AAAjB;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,2CAAoBxC,IAAI,CAACyC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAIKhE,IAAI,CAACwB,QAAL,mBACC,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,sBAAlB;AACA,oBAAA,OAAO,EAAE,MAAMI,mBAAmB,CAACL,IAAI,CAACQ,OAAN,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALN,eAUM,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AACE,oBAAA,OAAO,EAAE,MAAM;AAAC1B,sBAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACdE,sBAAAA,yBAAyB,CAACgB,IAAI,CAACuC,SAAL,GAAiB,gBAAlB,CAAzB;AAA+D,qBAFnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVN;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA,iBAAWvC,IAAI,CAACQ,OAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAuBD,WAxBA;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA,eAiDA,QAAC,UAAD;AACE,QAAA,qBAAqB,EAAE3B,qBADzB;AAEE,QAAA,wBAAwB,EAAEC,wBAF5B;AAGE,QAAA,sBAAsB,EAAEC,sBAH1B;AAIE,QAAA,yBAAyB,EAAEC;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAjDA,eAuDA,QAAC,SAAD;AAAA,gCACE;AAAA,oBACGc,QAAQ,CAACa,eAAT,CAAyBwB,MAAzB,GACI,WAAUrC,QAAQ,CAACa,eAAT,CAAyBwB,MAAO,UAC3CrC,QAAQ,CAACa,eAAT,CAAyBwB,MAAzB,KAAoC,CAApC,GAAwC,WAAxC,GAAsD,YACrD,GAHJ,GAIG;AALN;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,oBACGrC,QAAQ,CAACa,eAAT,CAAyByB,GAAzB,CAA8BpC,IAAD,IAAU;AACtC,gCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE,QAAC,IAAD;AAA0B,gBAAA,KAAK,EAAE;AAAEqC,kBAAAA,KAAK,EAAE;AAAT,iBAAjC;AAAA,wCACE,QAAC,IAAD,CAAM,GAAN;AAAU,kBAAA,GAAG,EAAErC,IAAI,CAAC0C,YAApB;AAAkC,kBAAA,GAAG,EAAG,kBAAiB1C,IAAI,CAAC2C,UAAW,EAAzE;AAA4E,kBAAA,OAAO,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAW,kBAAA,SAAS,EAAC,WAArB;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA,8BAAa3C,IAAI,CAAC2C;AAAlB;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,8BAAY3C,IAAI,CAAC4C;AAAjB;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA,2CAAoB5C,IAAI,CAAC6C,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAIGpE,IAAI,CAACwB,QAAL,mBACC,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,sBAAlB;AACA,oBAAA,OAAO,EAAE,MAAMI,mBAAmB,CAACL,IAAI,CAACU,QAAN,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAWE,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAA0B,oBAAA,OAAO,EAAE,MAAM;AAACxB,sBAAAA,qBAAqB,CAAC,IAAD,CAArB;AAC1CE,sBAAAA,sBAAsB,CAACY,IAAI,CAAC2C,UAAL,GAAkB,eAAnB,CAAtB;AAA4D,qBAD5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA,iBAAW3C,IAAI,CAACU,QAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAsBD,WAvBA;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDA,eA0FA,QAAC,OAAD;AACE,QAAA,kBAAkB,EAAEzB,kBADtB;AAEE,QAAA,qBAAqB,EAAEC,qBAFzB;AAGE,QAAA,mBAAmB,EAAEC,mBAHvB;AAIE,QAAA,sBAAsB,EAAEC;AAJ1B;AAAA;AAAA;AAAA;AAAA,cA1FA,eAgGA,QAAC,SAAD;AAAA,gCACE;AAAA,oBACGU,QAAQ,CAACe,aAAT,CAAuBsB,MAAvB,GACI,WAAUrC,QAAQ,CAACe,aAAT,CAAuBsB,MAAO,UACzCrC,QAAQ,CAACe,aAAT,CAAuBsB,MAAvB,KAAkC,CAAlC,GAAsC,MAAtC,GAA+C,OAChD,GAHF,GAIG;AALN;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,oBACGrC,QAAQ,CAACe,aAAT,CAAuBuB,GAAvB,CAA4BpC,IAAD,IAAU;AACpC,gCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE,QAAC,IAAD;AAAwB,gBAAA,KAAK,EAAE;AAAEqC,kBAAAA,KAAK,EAAE;AAAT,iBAA/B;AAAA,wCACE,QAAC,IAAD,CAAM,GAAN;AAAU,kBAAA,GAAG,EAAErC,IAAI,CAAC8C,UAApB;AAAgC,kBAAA,GAAG,EAAG,kBAAiB9C,IAAI,CAAC+C,QAAS,EAArE;AAAwE,kBAAA,OAAO,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAW,kBAAA,SAAS,EAAC,WAArB;AAAA,0CACA,QAAC,IAAD,CAAM,KAAN;AAAA,8BAAa/C,IAAI,CAAC+C;AAAlB;AAAA;AAAA;AAAA;AAAA,0BADA,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,2CAAoB/C,IAAI,CAACgD,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGGvE,IAAI,CAACwB,QAAL,mBACC,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,sBAAlB;AACA,oBAAA,OAAO,EAAE,MAAMI,mBAAmB,CAACL,IAAI,CAACU,QAAN,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAUE,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AACA,oBAAA,OAAO,EAAE,MAAM;AAACpB,sBAAAA,uBAAuB,CAAC,IAAD,CAAvB;AAChBE,sBAAAA,wBAAwB,CAACQ,IAAI,CAAC+C,QAAL,GAAgB,eAAjB,CAAxB;AAA4D,qBAF5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA,iBAAW/C,IAAI,CAACY,MAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAwBD,WAzBA;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhGA,eAqIA,QAAC,SAAD;AACE,QAAA,oBAAoB,EAAEvB,oBADxB;AAEE,QAAA,uBAAuB,EAAEC,uBAF3B;AAGE,QAAA,qBAAqB,EAAEC,qBAHzB;AAIE,QAAA,wBAAwB,EAAEC;AAJ5B;AAAA;AAAA;AAAA;AAAA,cArIA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6IE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI,QAAC,UAAD;AACE,QAAA,QAAQ,EAAEM,QAAQ,CAACnB,QADrB;AAEE,QAAA,WAAW,EAAEmB,QAAQ,CAACmD,WAFxB;AAGE,QAAA,OAAO,EAAEnD,QAAQ,CAACoD;AAHpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA7IF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuJD,CAzRD;;GAAMxE,O;UAC4BpB,S,EASZQ,W,EACIA,W,EAKED,Q;;;KAhBtBa,O;AA2RN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from \"react-router-dom\";\nimport {\n  ADD_FRIEND,\n  REMOVE_MOVIE,\n  REMOVE_TV_SHOW,\n  REMOVE_GAME,\n} from \"../utils/mutations\";\nimport { QUERY_SELF, QUERY_USER } from \"../utils/queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  Container,\n  CardColumns,\n  Card,\n  Button,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport MovieModal from '../components/MovieModal';\nimport TvModal from '../components/TvModal';\nimport GameModal from '../components/GameModal';\nimport FriendList from \"../components/FriendsList\";\nimport Auth from \"../utils/auth\";\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const [showMovieTrailerModal, setShowMovieTrailerModal] = useState(false);\n  const [movieTrailerModalTitle, setMovieTrailerModalTitle] = useState('');\n  const [showTvTrailerModal, setShowTvTrailerModal] = useState(false);\n  const [tvTrailerModalTitle, setTvTrailerModalTitle] = useState('');\n  const [showGameTrailerModal, setShowGameTrailerModal] = useState(false);\n  const [gameTrailerModalTitle, setGameTrailerModalTitle] = useState('');\n\n  const [addFriend] = useMutation(ADD_FRIEND);\n  const [deleteContent] = useMutation(\n    REMOVE_MOVIE,\n    REMOVE_TV_SHOW,\n    REMOVE_GAME\n  );\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_SELF , {\n    variables: { username: userParam },\n  });\n\n  const userData = data?.me || data?.user || {};\n\n  if (Auth.loggedIn() && Auth.getUserData().data.username === userParam) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  if (!Auth.loggedIn()) {\n    return <Redirect to=\"/\" />;\n  }\n\n  \n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!userData?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Please select log in or sign up to\n        view user profile page!\n      </h4>\n    );\n  }\n\n  console.log(userData)\n  // change the passed in value to something that can be unique to the content type ie. passed in value of mediaType and compare to favorite media array on user model\n  const handleDeleteContent = async () => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n\n    const movieId =\n      userData.favoriteMovies.movieId\n    const tvShowId =\n      userData.favoriteTvShows.tvShowId;\n    const gameId =\n      userData.favoriteGames.gameId;\n\n    if (!token) {\n      return false;\n    }\n\n    if (movieId) {\n      await deleteContent({\n        variables: { movieId: movieId },\n        update: (cache) => {\n          const data = cache.readQuery({ query: QUERY_SELF });\n          const userDataCache = data.me;\n          const savedMovieCache = userDataCache.favoriteMovies;\n          const updatedMoviesCache = savedMovieCache.filter(\n            (movie) => movie.movieId !== movieId\n          );\n          data.me.favoriteMovies = updatedMoviesCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: { data: { ...data.me.favoriteMovies } },\n          });\n        },\n      });\n    }\n    if (tvShowId) {\n      await deleteContent({\n        variables: { tvShowId: tvShowId },\n        update: (cache) => {\n          const data = cache.readQuery({ query: QUERY_SELF });\n          const userDataCache = data.me;\n          const savedTvShowCache = userDataCache.favoriteTvShows;\n          const updatedTvShowCache = savedTvShowCache.filter(\n            (tv) => tv.tvShowId !== tvShowId\n          );\n          data.me.favoriteTvShows = updatedTvShowCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: { data: { ...data.me.favoriteTvShows } },\n          });\n        },\n      });\n    }\n    if (gameId) {\n      await deleteContent({\n        variables: { gameId: gameId },\n        update: (cache) => {\n          const data = cache.readQuery({ query: QUERY_SELF });\n          const userDataCache = data.me;\n          const savedGameCache = userDataCache.favoriteGames;\n          const updatedGamesCache = savedGameCache.filter(\n            (game) => game.gameId !== gameId\n          );\n          data.me.favoriteGames = updatedGamesCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: { data: { ...data.me.favoriteGames } },\n          });\n        },\n      });\n    }\n  };\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: { id: userData._id },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <main>\n      <div>\n        <div className=\"flex-row mb-3\">\n          <h2 className=\"bg-dark text-secondary p-3 display-inline-block text-center\">\n            Welcome to {userParam ? `${userData.username}'s` : 'your'} Profile!\n          </h2>\n        </div>\n        <div className=\"btn-loc\">\n          {userParam && (\n            <button onClick={handleClick} size=\"lg\">\n              Add Friend\n            </button>\n          )}\n        </div>\n      <Container>\n        <h2>\n          {userData.favoriteMovies.length\n            ? `Viewing ${userData.favoriteMovies.length} saved ${\n              userData.favoriteMovies.length === 1 ? \"Movie\" : \"Movies\"\n              }:`\n              : \"You have no saved Movies!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteMovies.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.movieId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.moviePoster} alt={`The poster for ${user.movieName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                      <Card.Title>{user.movieName}</Card.Title>\n                      <Card.Text>{user.movieDetails}</Card.Text>\n                      <Card.Text>Rating: {user.movieRating}</Card.Text>\n                      {Auth.loggedIn() && (\n                        <Button className=\"btn-block btn-danger\"\n                        onClick={() => handleDeleteContent(user.movieId)}\n                        >Delete this Movie!\n                        </Button>\n                      )}\n                        <Button variant=\"primary\" \n                          onClick={() => {setShowMovieTrailerModal(true)\n                            setMovieTrailerModalTitle(user.movieName + \" Movie Trailer\"); }}\n                          >Watch a trailer!\n                        </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n      <MovieModal\n        showMovieTrailerModal={showMovieTrailerModal}\n        setShowMovieTrailerModal={setShowMovieTrailerModal}\n        movieTrailerModalTitle={movieTrailerModalTitle}\n        setMovieTrailerModalTitle={setMovieTrailerModalTitle}\n        ></MovieModal>  \n      <Container>\n        <h2>\n          {userData.favoriteTvShows.length\n            ? `Viewing ${userData.favoriteTvShows.length} saved ${\n              userData.favoriteTvShows.length === 1 ? \"T.V. show\" : \"T.V. shows\"\n              }:`\n            : \"You have no saved T.V. Shows!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteTvShows.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.tvShowId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.tvShowPoster} alt={`The poster for ${user.tvShowName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                    <Card.Title>{user.tvShowName}</Card.Title>\n                    <Card.Text>{user.tvShowDetails}</Card.Text>\n                    <Card.Text>Rating: {user.tvShowRating}</Card.Text>\n                    {Auth.loggedIn() && (\n                      <Button className=\"btn-block btn-danger\"\n                      onClick={() => handleDeleteContent(user.tvShowId)}\n                      >\n                        Delete this T.V. Show!\n                      </Button>\n                    )}\n                    <Button variant=\"primary\" onClick={() => {setShowTvTrailerModal(true)\n                    setTvTrailerModalTitle(user.tvShowName + \" Show Trailer\"); }}\n                    >Watch a trailer!</Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n      <TvModal\n        showTvTrailerModal={showTvTrailerModal}\n        setShowTvTrailerModal={setShowTvTrailerModal}\n        tvTrailerModalTitle={tvTrailerModalTitle}\n        setTvTrailerModalTitle={setTvTrailerModalTitle}\n        ></TvModal>\n      <Container>\n        <h2>\n          {userData.favoriteGames.length\n            ? `Viewing ${userData.favoriteGames.length} saved ${\n              userData.favoriteGames.length === 1 ? \"game\" : \"games\"\n            }:`\n            : \"You have no saved Games!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteGames.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.gameId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.gamePoster} alt={`The poster for ${user.gameName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                  <Card.Title>{user.gameName}</Card.Title>\n                    <Card.Text>Rating: {user.gameRating}</Card.Text>\n                    {Auth.loggedIn() && (\n                      <Button className=\"btn-block btn-danger\"\n                      onClick={() => handleDeleteContent(user.tvShowId)}\n                      >\n                      Delete this Game!\n                    </Button>\n                    )}\n                    <Button variant=\"primary\" \n                    onClick={() => {setShowGameTrailerModal(true)\n                    setGameTrailerModalTitle(user.gameName + \" game Trailer\"); }}\n                    >\n                      Watch a trailer!\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>   \n            );\n          })}\n        </Row>\n      </Container>\n      <GameModal\n        showGameTrailerModal={showGameTrailerModal}\n        setShowGameTrailerModal={setShowGameTrailerModal}\n        gameTrailerModalTitle={gameTrailerModalTitle}\n        setGameTrailerModalTitle={setGameTrailerModalTitle}\n      ></GameModal> \n      </div>\n      <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendList\n            username={userData.username}\n            friendCount={userData.friendCount}\n            friends={userData.friends}\n          />\n        </div>\n    </main>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}