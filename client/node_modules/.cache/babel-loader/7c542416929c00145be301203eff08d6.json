{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\entertain-me-redux\\\\client\\\\src\\\\components\\\\TrailerModal\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\nimport { useLazyQuery } from \"@apollo/client\";\nimport { TRAILER_API_QUERY } from \"../../utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TrailerModal = props => {\n  _s();\n\n  const {\n    showTrailerModal,\n    setShowTrailerModal,\n    trailerModalTitle\n  } = props;\n  const [getTrailer, {\n    loading,\n    data\n  }] = useLazyQuery(TRAILER_API_QUERY);\n  useEffect(() => {\n    if (data) {\n      document.getElementById('video').src = `https://www.youtube.com/embed/${data.trailer.videoId}`;\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this);\n  }\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: showTrailerModal,\n      onHide: () => setShowTrailerModal(false),\n      \"aria-labelledby\": \"trailer-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: trailerModalTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-box\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: \"youtube\",\n            dialogueClassName: \"video\",\n            id: \"video\",\n            className: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => getTrailer({\n            variables: {\n              mediaTitle: trailerModalTitle\n            }\n          }),\n          children: \"Show Me The Trailer!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(TrailerModal, \"v/+I4y3OuPShYHisIChZHh8qaI4=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = TrailerModal;\nexport default TrailerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrailerModal\");","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/components/TrailerModal/index.js"],"names":["useState","useEffect","Modal","Button","useLazyQuery","TRAILER_API_QUERY","TrailerModal","props","showTrailerModal","setShowTrailerModal","trailerModalTitle","getTrailer","loading","data","document","getElementById","src","trailer","videoId","console","log","variables","mediaTitle"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,mBAApB;AAAyCC,IAAAA;AAAzC,MAA+DH,KAArE;AACA,QAAM,CAACI,UAAD,EAAa;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAb,IAAkCT,YAAY,CAACC,iBAAD,CAApD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,IAAJ,EAAU;AACNC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,GAAjC,GAAwC,iCAAgCH,IAAI,CAACI,OAAL,CAAaC,OAAQ,EAA7F;AACH;AACJ,GAJQ,CAAT;;AAMA,MAAIN,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDO,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,IAAI,EAAEL,gBAFR;AAGE,MAAA,MAAM,EAAE,MAAMC,mBAAmB,CAAC,KAAD,CAHnC;AAIE,yBAAgB,eAJlB;AAAA,8BAME,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA,oBAAcC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,iBAAiB,EAAC,OAA1C;AACA,YAAA,EAAE,EAAC,OADH;AACW,YAAA,SAAS,EAAC;AADrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAeE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMC,UAAU,CAAC;AAAEU,YAAAA,SAAS,EAAE;AAAEC,cAAAA,UAAU,EAAEZ;AAAd;AAAb,WAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBH,CAvCD;;GAAMJ,Y;UAEsCF,Y;;;KAFtCE,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\nimport { useLazyQuery } from \"@apollo/client\";\nimport { TRAILER_API_QUERY } from \"../../utils/queries\";\n\nconst TrailerModal = (props) => {\n    const { showTrailerModal, setShowTrailerModal, trailerModalTitle } = props;\n    const [getTrailer, { loading, data }] = useLazyQuery(TRAILER_API_QUERY);\n    \n    useEffect(() => {\n        if (data) {\n            document.getElementById('video').src = `https://www.youtube.com/embed/${data.trailer.videoId}`\n        }\n    });\n\n    if (loading) {\n      return <div>Loading...</div>\n    }\n\n    console.log(data)\n  \n    return (\n      <>\n        <Modal\n          size=\"lg\"\n          show={showTrailerModal}\n          onHide={() => setShowTrailerModal(false)}\n          aria-labelledby=\"trailer-modal\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>{trailerModalTitle}</Modal.Title>       \n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"video-box\">\n              <iframe title=\"youtube\" dialogueClassName=\"video\" \n              id=\"video\" className=\"video\"></iframe>   \n            </div>   \n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => getTrailer({ variables: { mediaTitle: trailerModalTitle }})}>Show Me The Trailer!</Button>     \n          </Modal.Footer>         \n          </Modal>\n      </>                           \n    )                               \n};\n\nexport default TrailerModal;"]},"metadata":{},"sourceType":"module"}