{"ast":null,"code":"import _regeneratorRuntime from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Redirect,useParams}from\"react-router-dom\";import{ADD_FRIEND,REMOVE_MOVIE,REMOVE_TV_SHOW,REMOVE_GAME}from\"../utils/mutations\";import{QUERY_SELF,QUERY_USER}from\"../utils/queries\";import{useQuery,useMutation}from\"@apollo/client\";import{Container,Card,Button,Row,Col}from\"react-bootstrap\";import MovieModal from'../components/MovieModal';import TvModal from'../components/TvModal';import GameModal from'../components/GameModal';import FriendList from\"../components/FriendsList\";import Auth from\"../utils/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(){var _useParams=useParams(),userParam=_useParams.username;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMovieTrailerModal=_useState2[0],setShowMovieTrailerModal=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),movieTrailerModalTitle=_useState4[0],setMovieTrailerModalTitle=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showTvTrailerModal=_useState6[0],setShowTvTrailerModal=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),tvTrailerModalTitle=_useState8[0],setTvTrailerModalTitle=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showGameTrailerModal=_useState10[0],setShowGameTrailerModal=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),gameTrailerModalTitle=_useState12[0],setGameTrailerModalTitle=_useState12[1];var _useMutation=useMutation(ADD_FRIEND),_useMutation2=_slicedToArray(_useMutation,1),addFriend=_useMutation2[0];var _useMutation3=useMutation(REMOVE_MOVIE,REMOVE_TV_SHOW,REMOVE_GAME),_useMutation4=_slicedToArray(_useMutation3,1),deleteContent=_useMutation4[0];var _useQuery=useQuery(userParam?QUERY_USER:QUERY_SELF,{variables:{username:userParam}}),loading=_useQuery.loading,data=_useQuery.data;var userData=(data===null||data===void 0?void 0:data.me)||(data===null||data===void 0?void 0:data.user)||{};if(Auth.loggedIn()&&Auth.getUserData().data.username===userParam){return/*#__PURE__*/_jsx(Redirect,{to:\"/profile\"});}if(!Auth.loggedIn()){return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(!(userData===null||userData===void 0?void 0:userData.username)){return/*#__PURE__*/_jsx(\"h4\",{children:\"You need to be logged in to see this. Please select log in or sign up to view user profile page!\"});}console.log(userData);// change the passed in value to something that can be unique to the content type ie. passed in value of mediaType and compare to favorite media array on user model\nvar handleDeleteContent=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var token,movieId,tvShowId,gameId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=Auth.loggedIn()?Auth.retrieveToken():null;movieId=userData.favoriteMovies.movieId;tvShowId=userData.favoriteTvShows.tvShowId;gameId=userData.favoriteGames.gameId;if(token){_context.next=6;break;}return _context.abrupt(\"return\",false);case 6:if(!movieId){_context.next=9;break;}_context.next=9;return deleteContent({variables:{movieId:movieId},update:function update(cache){var data=cache.readQuery({query:QUERY_SELF});var userDataCache=data.me;var savedMovieCache=userDataCache.favoriteMovies;var updatedMoviesCache=savedMovieCache.filter(function(movie){return movie.movieId!==movieId;});data.me.favoriteMovies=updatedMoviesCache;cache.writeQuery({query:QUERY_SELF,data:{data:_objectSpread({},data.me.favoriteMovies)}});}});case 9:if(!tvShowId){_context.next=12;break;}_context.next=12;return deleteContent({variables:{tvShowId:tvShowId},update:function update(cache){var data=cache.readQuery({query:QUERY_SELF});var userDataCache=data.me;var savedTvShowCache=userDataCache.favoriteTvShows;var updatedTvShowCache=savedTvShowCache.filter(function(tv){return tv.tvShowId!==tvShowId;});data.me.favoriteTvShows=updatedTvShowCache;cache.writeQuery({query:QUERY_SELF,data:{data:_objectSpread({},data.me.favoriteTvShows)}});}});case 12:if(!gameId){_context.next=15;break;}_context.next=15;return deleteContent({variables:{gameId:gameId},update:function update(cache){var data=cache.readQuery({query:QUERY_SELF});var userDataCache=data.me;var savedGameCache=userDataCache.favoriteGames;var updatedGamesCache=savedGameCache.filter(function(game){return game.gameId!==gameId;});data.me.favoriteGames=updatedGamesCache;cache.writeQuery({query:QUERY_SELF,data:{data:_objectSpread({},data.me.favoriteGames)}});}});case 15:case\"end\":return _context.stop();}}},_callee);}));return function handleDeleteContent(){return _ref.apply(this,arguments);};}();var handleClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return addFriend({variables:{id:userData._id}});case 3:_context2.next=8;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 8:case\"end\":return _context2.stop();}}},_callee2,null,[[0,5]]);}));return function handleClick(){return _ref2.apply(this,arguments);};}();if(loading){return/*#__PURE__*/_jsx(\"h2\",{children:\"Loading...\"});}return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-row mb-3\",children:/*#__PURE__*/_jsxs(\"h2\",{className:\"bg-dark text-secondary p-3 display-inline-block text-center\",children:[\"Welcome to \",userParam?\"\".concat(userData.username,\"'s\"):'your',\" Profile!\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"btn-loc\",children:userParam&&/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,size:\"lg\",children:\"Add Friend\"})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:userData.favoriteMovies.length?\"Viewing \".concat(userData.favoriteMovies.length,\" saved \").concat(userData.favoriteMovies.length===1?\"Movie\":\"Movies\",\":\"):\"You have no saved Movies!\"}),/*#__PURE__*/_jsx(Row,{fluid:\"true\",children:userData.favoriteMovies.map(function(user){return/*#__PURE__*/_jsx(Col,{sm:3,children:/*#__PURE__*/_jsxs(Card,{style:{width:'18rem'},children:[/*#__PURE__*/_jsx(Card.Img,{src:user.moviePoster,alt:\"The poster for \".concat(user.movieName),variant:\"top\"}),/*#__PURE__*/_jsxs(Card.Body,{className:\"card-body\",children:[/*#__PURE__*/_jsx(Card.Title,{children:user.movieName}),/*#__PURE__*/_jsx(Card.Text,{children:user.movieDetails}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Rating: \",user.movieRating]}),Auth.loggedIn()&&/*#__PURE__*/_jsx(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteContent(user.movieId);},children:\"Delete this Movie!\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){setShowMovieTrailerModal(true);setMovieTrailerModalTitle(user.movieName+\" Movie Trailer\");},children:\"Watch a trailer!\"})]})]},user.movieId)});})})]}),/*#__PURE__*/_jsx(MovieModal,{showMovieTrailerModal:showMovieTrailerModal,setShowMovieTrailerModal:setShowMovieTrailerModal,movieTrailerModalTitle:movieTrailerModalTitle,setMovieTrailerModalTitle:setMovieTrailerModalTitle}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:userData.favoriteTvShows.length?\"Viewing \".concat(userData.favoriteTvShows.length,\" saved \").concat(userData.favoriteTvShows.length===1?\"T.V. show\":\"T.V. shows\",\":\"):\"You have no saved T.V. Shows!\"}),/*#__PURE__*/_jsx(Row,{fluid:\"true\",children:userData.favoriteTvShows.map(function(user){return/*#__PURE__*/_jsx(Col,{sm:3,children:/*#__PURE__*/_jsxs(Card,{style:{width:'18rem'},children:[/*#__PURE__*/_jsx(Card.Img,{src:user.tvShowPoster,alt:\"The poster for \".concat(user.tvShowName),variant:\"top\"}),/*#__PURE__*/_jsxs(Card.Body,{className:\"card-body\",children:[/*#__PURE__*/_jsx(Card.Title,{children:user.tvShowName}),/*#__PURE__*/_jsx(Card.Text,{children:user.tvShowDetails}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Rating: \",user.tvShowRating]}),Auth.loggedIn()&&/*#__PURE__*/_jsx(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteContent(user.tvShowId);},children:\"Delete this T.V. Show!\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){setShowTvTrailerModal(true);setTvTrailerModalTitle(user.tvShowName+\" Show Trailer\");},children:\"Watch a trailer!\"})]})]},user.tvShowId)});})})]}),/*#__PURE__*/_jsx(TvModal,{showTvTrailerModal:showTvTrailerModal,setShowTvTrailerModal:setShowTvTrailerModal,tvTrailerModalTitle:tvTrailerModalTitle,setTvTrailerModalTitle:setTvTrailerModalTitle}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:userData.favoriteGames.length?\"Viewing \".concat(userData.favoriteGames.length,\" saved \").concat(userData.favoriteGames.length===1?\"game\":\"games\",\":\"):\"You have no saved Games!\"}),/*#__PURE__*/_jsx(Row,{fluid:\"true\",children:userData.favoriteGames.map(function(user){return/*#__PURE__*/_jsx(Col,{sm:3,children:/*#__PURE__*/_jsxs(Card,{style:{width:'18rem'},children:[/*#__PURE__*/_jsx(Card.Img,{src:user.gamePoster,alt:\"The poster for \".concat(user.gameName),variant:\"top\"}),/*#__PURE__*/_jsxs(Card.Body,{className:\"card-body\",children:[/*#__PURE__*/_jsx(Card.Title,{children:user.gameName}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Rating: \",user.gameRating]}),Auth.loggedIn()&&/*#__PURE__*/_jsx(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteContent(user.tvShowId);},children:\"Delete this Game!\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){setShowGameTrailerModal(true);setGameTrailerModalTitle(user.gameName+\" game Trailer\");},children:\"Watch a trailer!\"})]})]},user.gameId)});})})]}),/*#__PURE__*/_jsx(GameModal,{showGameTrailerModal:showGameTrailerModal,setShowGameTrailerModal:setShowGameTrailerModal,gameTrailerModalTitle:gameTrailerModalTitle,setGameTrailerModalTitle:setGameTrailerModalTitle})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-12 col-lg-3 mb-3\",children:/*#__PURE__*/_jsx(FriendList,{username:userData.username,friendCount:userData.friendCount,friends:userData.friends})})]});};export default Profile;","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/pages/Profile.js"],"names":["React","useState","Redirect","useParams","ADD_FRIEND","REMOVE_MOVIE","REMOVE_TV_SHOW","REMOVE_GAME","QUERY_SELF","QUERY_USER","useQuery","useMutation","Container","Card","Button","Row","Col","MovieModal","TvModal","GameModal","FriendList","Auth","Profile","userParam","username","showMovieTrailerModal","setShowMovieTrailerModal","movieTrailerModalTitle","setMovieTrailerModalTitle","showTvTrailerModal","setShowTvTrailerModal","tvTrailerModalTitle","setTvTrailerModalTitle","showGameTrailerModal","setShowGameTrailerModal","gameTrailerModalTitle","setGameTrailerModalTitle","addFriend","deleteContent","variables","loading","data","userData","me","user","loggedIn","getUserData","console","log","handleDeleteContent","token","retrieveToken","movieId","favoriteMovies","tvShowId","favoriteTvShows","gameId","favoriteGames","update","cache","readQuery","query","userDataCache","savedMovieCache","updatedMoviesCache","filter","movie","writeQuery","savedTvShowCache","updatedTvShowCache","tv","savedGameCache","updatedGamesCache","game","handleClick","id","_id","error","length","map","width","moviePoster","movieName","movieDetails","movieRating","tvShowPoster","tvShowName","tvShowDetails","tvShowRating","gamePoster","gameName","gameRating","friendCount","friends"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, useParams } from \"react-router-dom\";\nimport {\n  ADD_FRIEND,\n  REMOVE_MOVIE,\n  REMOVE_TV_SHOW,\n  REMOVE_GAME,\n} from \"../utils/mutations\";\nimport { QUERY_SELF, QUERY_USER } from \"../utils/queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport MovieModal from '../components/MovieModal';\nimport TvModal from '../components/TvModal';\nimport GameModal from '../components/GameModal';\nimport FriendList from \"../components/FriendsList\";\nimport Auth from \"../utils/auth\";\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const [showMovieTrailerModal, setShowMovieTrailerModal] = useState(false);\n  const [movieTrailerModalTitle, setMovieTrailerModalTitle] = useState('');\n  const [showTvTrailerModal, setShowTvTrailerModal] = useState(false);\n  const [tvTrailerModalTitle, setTvTrailerModalTitle] = useState('');\n  const [showGameTrailerModal, setShowGameTrailerModal] = useState(false);\n  const [gameTrailerModalTitle, setGameTrailerModalTitle] = useState('');\n\n  const [addFriend] = useMutation(ADD_FRIEND);\n  const [deleteContent] = useMutation(\n    REMOVE_MOVIE,\n    REMOVE_TV_SHOW,\n    REMOVE_GAME\n  );\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_SELF , {\n    variables: { username: userParam },\n  });\n\n  const userData = data?.me || data?.user || {};\n\n  if (Auth.loggedIn() && Auth.getUserData().data.username === userParam) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  if (!Auth.loggedIn()) {\n    return <Redirect to=\"/\" />;\n  }\n\n  \n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!userData?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Please select log in or sign up to\n        view user profile page!\n      </h4>\n    );\n  }\n\n  console.log(userData)\n  // change the passed in value to something that can be unique to the content type ie. passed in value of mediaType and compare to favorite media array on user model\n  const handleDeleteContent = async () => {\n    const token = Auth.loggedIn() ? Auth.retrieveToken() : null;\n\n    const movieId =\n      userData.favoriteMovies.movieId\n    const tvShowId =\n      userData.favoriteTvShows.tvShowId;\n    const gameId =\n      userData.favoriteGames.gameId;\n\n    if (!token) {\n      return false;\n    }\n\n    if (movieId) {\n      await deleteContent({\n        variables: { movieId: movieId },\n        update: (cache) => {\n          const data = cache.readQuery({ query: QUERY_SELF });\n          const userDataCache = data.me;\n          const savedMovieCache = userDataCache.favoriteMovies;\n          const updatedMoviesCache = savedMovieCache.filter(\n            (movie) => movie.movieId !== movieId\n          );\n          data.me.favoriteMovies = updatedMoviesCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: { data: { ...data.me.favoriteMovies } },\n          });\n        },\n      });\n    }\n    if (tvShowId) {\n      await deleteContent({\n        variables: { tvShowId: tvShowId },\n        update: (cache) => {\n          const data = cache.readQuery({ query: QUERY_SELF });\n          const userDataCache = data.me;\n          const savedTvShowCache = userDataCache.favoriteTvShows;\n          const updatedTvShowCache = savedTvShowCache.filter(\n            (tv) => tv.tvShowId !== tvShowId\n          );\n          data.me.favoriteTvShows = updatedTvShowCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: { data: { ...data.me.favoriteTvShows } },\n          });\n        },\n      });\n    }\n    if (gameId) {\n      await deleteContent({\n        variables: { gameId: gameId },\n        update: (cache) => {\n          const data = cache.readQuery({ query: QUERY_SELF });\n          const userDataCache = data.me;\n          const savedGameCache = userDataCache.favoriteGames;\n          const updatedGamesCache = savedGameCache.filter(\n            (game) => game.gameId !== gameId\n          );\n          data.me.favoriteGames = updatedGamesCache;\n          cache.writeQuery({\n            query: QUERY_SELF,\n            data: { data: { ...data.me.favoriteGames } },\n          });\n        },\n      });\n    }\n  };\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: { id: userData._id },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <main>\n      <div>\n        <div className=\"flex-row mb-3\">\n          <h2 className=\"bg-dark text-secondary p-3 display-inline-block text-center\">\n            Welcome to {userParam ? `${userData.username}'s` : 'your'} Profile!\n          </h2>\n        </div>\n        <div className=\"btn-loc\">\n          {userParam && (\n            <button onClick={handleClick} size=\"lg\">\n              Add Friend\n            </button>\n          )}\n        </div>\n      <Container>\n        <h2>\n          {userData.favoriteMovies.length\n            ? `Viewing ${userData.favoriteMovies.length} saved ${\n              userData.favoriteMovies.length === 1 ? \"Movie\" : \"Movies\"\n              }:`\n              : \"You have no saved Movies!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteMovies.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.movieId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.moviePoster} alt={`The poster for ${user.movieName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                      <Card.Title>{user.movieName}</Card.Title>\n                      <Card.Text>{user.movieDetails}</Card.Text>\n                      <Card.Text>Rating: {user.movieRating}</Card.Text>\n                      {Auth.loggedIn() && (\n                        <Button className=\"btn-block btn-danger\"\n                        onClick={() => handleDeleteContent(user.movieId)}\n                        >Delete this Movie!\n                        </Button>\n                      )}\n                        <Button variant=\"primary\" \n                          onClick={() => {setShowMovieTrailerModal(true)\n                            setMovieTrailerModalTitle(user.movieName + \" Movie Trailer\"); }}\n                          >Watch a trailer!\n                        </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n      <MovieModal\n        showMovieTrailerModal={showMovieTrailerModal}\n        setShowMovieTrailerModal={setShowMovieTrailerModal}\n        movieTrailerModalTitle={movieTrailerModalTitle}\n        setMovieTrailerModalTitle={setMovieTrailerModalTitle}\n        ></MovieModal>  \n      <Container>\n        <h2>\n          {userData.favoriteTvShows.length\n            ? `Viewing ${userData.favoriteTvShows.length} saved ${\n              userData.favoriteTvShows.length === 1 ? \"T.V. show\" : \"T.V. shows\"\n              }:`\n            : \"You have no saved T.V. Shows!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteTvShows.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.tvShowId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.tvShowPoster} alt={`The poster for ${user.tvShowName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                    <Card.Title>{user.tvShowName}</Card.Title>\n                    <Card.Text>{user.tvShowDetails}</Card.Text>\n                    <Card.Text>Rating: {user.tvShowRating}</Card.Text>\n                    {Auth.loggedIn() && (\n                      <Button className=\"btn-block btn-danger\"\n                      onClick={() => handleDeleteContent(user.tvShowId)}\n                      >\n                        Delete this T.V. Show!\n                      </Button>\n                    )}\n                    <Button variant=\"primary\" onClick={() => {setShowTvTrailerModal(true)\n                    setTvTrailerModalTitle(user.tvShowName + \" Show Trailer\"); }}\n                    >Watch a trailer!</Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n      <TvModal\n        showTvTrailerModal={showTvTrailerModal}\n        setShowTvTrailerModal={setShowTvTrailerModal}\n        tvTrailerModalTitle={tvTrailerModalTitle}\n        setTvTrailerModalTitle={setTvTrailerModalTitle}\n        ></TvModal>\n      <Container>\n        <h2>\n          {userData.favoriteGames.length\n            ? `Viewing ${userData.favoriteGames.length} saved ${\n              userData.favoriteGames.length === 1 ? \"game\" : \"games\"\n            }:`\n            : \"You have no saved Games!\"}\n        </h2>\n        <Row fluid=\"true\">\n          {userData.favoriteGames.map((user) => {\n            return (\n              <Col sm={3}>\n                <Card key={user.gameId} style={{ width: '18rem' }}>\n                  <Card.Img src={user.gamePoster} alt={`The poster for ${user.gameName}`} variant=\"top\" />\n                  <Card.Body className=\"card-body\">\n                  <Card.Title>{user.gameName}</Card.Title>\n                    <Card.Text>Rating: {user.gameRating}</Card.Text>\n                    {Auth.loggedIn() && (\n                      <Button className=\"btn-block btn-danger\"\n                      onClick={() => handleDeleteContent(user.tvShowId)}\n                      >\n                      Delete this Game!\n                    </Button>\n                    )}\n                    <Button variant=\"primary\" \n                    onClick={() => {setShowGameTrailerModal(true)\n                    setGameTrailerModalTitle(user.gameName + \" game Trailer\"); }}\n                    >\n                      Watch a trailer!\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>   \n            );\n          })}\n        </Row>\n      </Container>\n      <GameModal\n        showGameTrailerModal={showGameTrailerModal}\n        setShowGameTrailerModal={setShowGameTrailerModal}\n        gameTrailerModalTitle={gameTrailerModalTitle}\n        setGameTrailerModalTitle={setGameTrailerModalTitle}\n      ></GameModal> \n      </div>\n      <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendList\n            username={userData.username}\n            friendCount={userData.friendCount}\n            friends={userData.friends}\n          />\n        </div>\n    </main>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}