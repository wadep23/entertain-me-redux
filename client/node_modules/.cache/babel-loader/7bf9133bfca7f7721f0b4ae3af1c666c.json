{"ast":null,"code":"import _regeneratorRuntime from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button,Card,Row,Container,Col}from'react-bootstrap';import{useMutation,useQuery}from'@apollo/client';import{SAVE_GAME,ADD_POST}from'../../utils/mutations';import{GAME_API_QUERY}from'../../utils/queries';import GameModal from'../GameModal';import Auth from'../../utils/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchGames=function SearchGames(props){var platformInt=props.platformInt,genreString=props.genreString;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showGameTrailerModal=_useState2[0],setShowGameTrailerModal=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),gameTrailerModalTitle=_useState4[0],setGameTrailerModalTitle=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),searchedMedia=_useState6[0],setSearchedMedia=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),savedMedia=_useState8[0],setSavedMedia=_useState8[1];var _useQuery=useQuery(GAME_API_QUERY,{variables:{genre:genreString,platform:platformInt}}),loading=_useQuery.loading,data=_useQuery.data;var _useMutation=useMutation(SAVE_GAME),_useMutation2=_slicedToArray(_useMutation,1),saveGame=_useMutation2[0];var _useMutation3=useMutation(ADD_POST),_useMutation4=_slicedToArray(_useMutation3,1),createPost=_useMutation4[0];useEffect(function(){if(data){var gameData=data.game.map(function(game){return{gameId:game.id,gameName:game.name,gameRating:game.rating,gamePoster:game.background_image};});setSearchedMedia(gameData);}},[data]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}var handleSaveMedia=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(gameId){var gameToSave;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:gameToSave=searchedMedia.find(function(media){return media.gameId===gameId;});_context.prev=1;_context.next=4;return saveGame({variables:{gameId:gameToSave.gameId,gameName:gameToSave.gameName,gamePoster:gameToSave.gamePoster,gameRating:gameToSave.gameRating}});case 4:_context.next=6;return createPost({variables:{postText:\" saved \".concat(gameToSave.gameName,\" to their favorite games!\")}});case 6:setSavedMedia([].concat(_toConsumableArray(savedMedia),[gameToSave.gameId]));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function handleSaveMedia(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{class:\"return-data\",children:[/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{children:searchedMedia.map(function(games){return/*#__PURE__*/_jsx(Col,{sm:3,children:/*#__PURE__*/_jsxs(Card,{style:{width:'18rem'},children:[/*#__PURE__*/_jsx(Card.Img,{src:games.gamePoster,alt:\"The poster for \".concat(games.gameName),variant:\"top\"}),/*#__PURE__*/_jsxs(Card.Body,{className:\"card-body\",children:[/*#__PURE__*/_jsx(Card.Title,{children:games.gameName}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Rating: \",games.gameRating]}),Auth.loggedIn()&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){handleSaveMedia(games.gameId);},children:\"Save to your favorites!\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){setShowGameTrailerModal(true);setGameTrailerModalTitle(games.gameName+\" game Trailer\");},children:\"Watch a trailer!\"})]})]},games.gameId)});})})}),/*#__PURE__*/_jsx(GameModal,{showGameTrailerModal:showGameTrailerModal,setShowGameTrailerModal:setShowGameTrailerModal,gameTrailerModalTitle:gameTrailerModalTitle,setGameTrailerModalTitle:setGameTrailerModalTitle})]});};export default SearchGames;","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/components/Game/index.js"],"names":["React","useState","useEffect","Button","Card","Row","Container","Col","useMutation","useQuery","SAVE_GAME","ADD_POST","GAME_API_QUERY","GameModal","Auth","SearchGames","props","platformInt","genreString","showGameTrailerModal","setShowGameTrailerModal","gameTrailerModalTitle","setGameTrailerModalTitle","searchedMedia","setSearchedMedia","savedMedia","setSavedMedia","variables","genre","platform","loading","data","saveGame","createPost","gameData","game","map","gameId","id","gameName","name","gameRating","rating","gamePoster","background_image","handleSaveMedia","gameToSave","find","media","postText","console","error","games","width","loggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Row, Container, Col } from 'react-bootstrap';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { SAVE_GAME, ADD_POST } from '../../utils/mutations';\nimport { GAME_API_QUERY }from '../../utils/queries';\nimport GameModal from '../GameModal';\nimport Auth from '../../utils/auth';\n\nconst SearchGames = (props) => {\n    const { platformInt, genreString } = props;\n    const [showGameTrailerModal, setShowGameTrailerModal] = useState(false);\n    const [gameTrailerModalTitle, setGameTrailerModalTitle] = useState('');\n    const [searchedMedia, setSearchedMedia] = useState([]);\n    const [savedMedia, setSavedMedia] = useState({});\n\n    const { loading, data } = useQuery(GAME_API_QUERY, {\n        variables: { genre: genreString, platform: platformInt}\n    });\n    \n    const [saveGame] = useMutation(SAVE_GAME);\n    const [createPost] = useMutation(ADD_POST);\n\n    \n    useEffect(() => {\n        if (data) {\n            let gameData = data.game.map((game) => ({\n                gameId: game.id,\n                gameName: game.name,\n                gameRating: game.rating,\n                gamePoster: game.background_image\n            }));\n            setSearchedMedia(gameData) \n        }\n    }, [data]);\n\n    if (loading) {\n        return <div>Loading...</div>\n    }\n\n    const handleSaveMedia = async (gameId) => {\n        const gameToSave = searchedMedia.find((media) => media.gameId === gameId);\n        \n        \n        try {\n            await saveGame({\n                variables: {\n                    gameId: gameToSave.gameId,\n                    gameName: gameToSave.gameName,\n                    gamePoster: gameToSave.gamePoster,\n                    gameRating: gameToSave.gameRating\n                }\n            })\n\n            await createPost({\n                variables: {\n                  postText: ` saved ${gameToSave.gameName} to their favorite games!`  \n                }\n            })\n\n            setSavedMedia([...savedMedia, gameToSave.gameId])\n            } catch (err) {\n                console.error(err);\n            }\n    };\n\n    return (\n        <div class=\"return-data\">\n            <Container>\n                <Row>\n                    {searchedMedia.map((games) => {\n                        return (\n                            <Col sm={3}>\n                                <Card key={games.gameId} style={{ width: '18rem' }}>\n                                    <Card.Img src={games.gamePoster} alt={`The poster for ${games.gameName}`} variant=\"top\" />\n                                    <Card.Body className=\"card-body\">\n                                        <Card.Title>{games.gameName}</Card.Title>\n                                        <Card.Text>Rating: {games.gameRating}</Card.Text>\n                                        {Auth.loggedIn() && (\n                                            <Button variant=\"primary\" onClick={() => {handleSaveMedia(games.gameId); }}>Save to your favorites!</Button>\n                                        )}\n                                        <Button variant=\"primary\" onClick={() => {setShowGameTrailerModal(true)\n                                         setGameTrailerModalTitle(games.gameName + \" game Trailer\"); }}\n                                        >Watch a trailer!</Button>\n                                    </Card.Body>\n                                </Card>\n                            </Col>   \n                        )   \n                    })}  \n                </Row>\n            </Container>\n            <GameModal\n                showGameTrailerModal={showGameTrailerModal}\n                setShowGameTrailerModal={setShowGameTrailerModal}\n                gameTrailerModalTitle={gameTrailerModalTitle}\n                setGameTrailerModalTitle={setGameTrailerModalTitle}\n            ></GameModal>    \n        </div>\n    );\n};\n\nexport default SearchGames;"]},"metadata":{},"sourceType":"module"}