{"ast":null,"code":"import _classCallCheck from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"G:/projects/entertain-me-redux/client/node_modules/@babel/runtime/helpers/esm/createClass\";import decode from\"jwt-decode\";var AuthData=/*#__PURE__*/function(){function AuthData(){_classCallCheck(this,AuthData);}_createClass(AuthData,[{key:\"getUserData\",value:// Grab data saved in token\nfunction getUserData(){return decode(this.retrieveToken());}// check if user's logged in\n},{key:\"loggedIn\",value:function loggedIn(){// Checks if there is a saved token and it's still valid\nvar token=this.retrieveToken();return!!token&&!this.isTokenExpired(token);}// check if token is expired\n},{key:\"isTokenExpired\",value:function isTokenExpired(token){try{var decodedToken=decode(token);if(decodedToken.exp<Date.now()/1000){return true;}else{return false;}}catch(err){return false;}}// get token from local storage\n},{key:\"retrieveToken\",value:function retrieveToken(){return localStorage.getItem(\"user_token\");}// Set token to localStorage\n},{key:\"login\",value:function login(userToken){localStorage.setItem(\"user_token\",userToken);window.location.assign(\"/\");}// Clears token and logouts\n},{key:\"logout\",value:function logout(){localStorage.removeItem(\"user_token\");window.location.assign(\"/\");}}]);return AuthData;}();export default new AuthData();","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/utils/auth.js"],"names":["decode","AuthData","retrieveToken","token","isTokenExpired","decodedToken","exp","Date","now","err","localStorage","getItem","userToken","setItem","window","location","assign","removeItem"],"mappings":"8OAAA,MAAOA,CAAAA,MAAP,KAAmB,YAAnB,C,GAEMC,CAAAA,Q,6HACJ;AACA,sBAAc,CACZ,MAAOD,CAAAA,MAAM,CAAC,KAAKE,aAAL,EAAD,CAAb,CACD,CAED;wBACA,mBAAW,CACT;AACA,GAAMC,CAAAA,KAAK,CAAG,KAAKD,aAAL,EAAd,CACA,MAAO,CAAC,CAACC,KAAF,EAAW,CAAC,KAAKC,cAAL,CAAoBD,KAApB,CAAnB,CACD,CAED;8BACA,wBAAeA,KAAf,CAAsB,CACpB,GAAI,CACF,GAAME,CAAAA,YAAY,CAAGL,MAAM,CAACG,KAAD,CAA3B,CACA,GAAIE,YAAY,CAACC,GAAb,CAAmBC,IAAI,CAACC,GAAL,GAAa,IAApC,CAA0C,CACxC,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAO,MAAP,CACD,CACF,CAAC,MAAOC,GAAP,CAAY,CACZ,MAAO,MAAP,CACD,CACF,CAED;6BACA,wBAAgB,CACd,MAAOC,CAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAP,CACD,CAED;qBACA,eAAMC,SAAN,CAAiB,CACfF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAmCD,SAAnC,EACAE,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB,EACD,CAED;sBACA,iBAAS,CACPN,YAAY,CAACO,UAAb,CAAwB,YAAxB,EACAH,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB,EACD,C,wBAGH,cAAe,IAAIf,CAAAA,QAAJ,EAAf","sourcesContent":["import decode from \"jwt-decode\";\n\nclass AuthData {\n  // Grab data saved in token\n  getUserData() {\n    return decode(this.retrieveToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.retrieveToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decodedToken = decode(token);\n      if (decodedToken.exp < Date.now() / 1000) {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (err) {\n      return false;\n    }\n  }\n\n  // get token from local storage\n  retrieveToken() {\n    return localStorage.getItem(\"user_token\");\n  }\n\n  // Set token to localStorage\n  login(userToken) {\n    localStorage.setItem(\"user_token\", userToken);\n    window.location.assign(\"/\");\n  }\n\n  // Clears token and logouts\n  logout() {\n    localStorage.removeItem(\"user_token\");\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthData();\n"]},"metadata":{},"sourceType":"module"}