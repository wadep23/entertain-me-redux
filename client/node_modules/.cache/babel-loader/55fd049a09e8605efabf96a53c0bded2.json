{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\entertain-me-redux\\\\client\\\\src\\\\components\\\\TvModal\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\nimport { useLazyQuery } from \"@apollo/client\";\nimport { TRAILER_API_QUERY } from \"../../utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TvModal = props => {\n  _s();\n\n  const {\n    showTvTrailerModal,\n    setShowTvTrailerModal,\n    tvTrailerModalTitle\n  } = props;\n  const [getTrailer, {\n    loading,\n    data\n  }] = useLazyQuery(TRAILER_API_QUERY);\n  useEffect(() => {\n    if (data) {\n      document.getElementById('video').src = `https://www.youtube.com/embed/${data.trailer.videoId}`;\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: showTvTrailerModal,\n      onHide: () => setShowTvTrailerModal(false),\n      \"aria-labelledby\": \"trailer-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: tvTrailerModalTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-box\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: \"youtube\",\n            dialogueClassName: \"video\",\n            id: \"video\",\n            className: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => getTrailer({\n            variables: {\n              mediaTitle: tvTrailerModalTitle\n            }\n          }),\n          children: \"Show Me The Trailer!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(TvModal, \"v/+I4y3OuPShYHisIChZHh8qaI4=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = TvModal;\nexport default TvModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvModal\");","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/components/TvModal/index.js"],"names":["useState","useEffect","Modal","Button","useLazyQuery","TRAILER_API_QUERY","TvModal","props","showTvTrailerModal","setShowTvTrailerModal","tvTrailerModalTitle","getTrailer","loading","data","document","getElementById","src","trailer","videoId","variables","mediaTitle"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA,qBAAtB;AAA6CC,IAAAA;AAA7C,MAAqEH,KAA3E;AACA,QAAM,CAACI,UAAD,EAAa;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAb,IAAkCT,YAAY,CAACC,iBAAD,CAApD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,IAAJ,EAAU;AACNC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,GAAjC,GAAwC,iCAAgCH,IAAI,CAACI,OAAL,CAAaC,OAAQ,EAA7F;AACH;AACJ,GAJQ,CAAT;;AAMA,MAAIN,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,IAAI,EAAEJ,kBAFR;AAGE,MAAA,MAAM,EAAE,MAAMC,qBAAqB,CAAC,KAAD,CAHrC;AAIE,yBAAgB,eAJlB;AAAA,8BAME,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA,oBAAcC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,iBAAiB,EAAC,OAA1C;AACA,YAAA,EAAE,EAAC,OADH;AACW,YAAA,SAAS,EAAC;AADrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAeE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMC,UAAU,CAAC;AAAEQ,YAAAA,SAAS,EAAE;AAAEC,cAAAA,UAAU,EAAEV;AAAd;AAAb,WAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBH,CArCD;;GAAMJ,O;UAEsCF,Y;;;KAFtCE,O;AAuCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\nimport { useLazyQuery } from \"@apollo/client\";\nimport { TRAILER_API_QUERY } from \"../../utils/queries\";\n\nconst TvModal = (props) => {\n    const { showTvTrailerModal, setShowTvTrailerModal, tvTrailerModalTitle } = props;\n    const [getTrailer, { loading, data }] = useLazyQuery(TRAILER_API_QUERY);\n    \n    useEffect(() => {\n        if (data) {\n            document.getElementById('video').src = `https://www.youtube.com/embed/${data.trailer.videoId}`\n        }\n    });\n\n    if (loading) {\n      return <div>Loading...</div>\n    }\n  \n    return (\n      <>\n        <Modal\n          size=\"lg\"\n          show={showTvTrailerModal}\n          onHide={() => setShowTvTrailerModal(false)}\n          aria-labelledby=\"trailer-modal\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>{tvTrailerModalTitle}</Modal.Title>       \n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"video-box\">\n              <iframe title=\"youtube\" dialogueClassName=\"video\" \n              id=\"video\" className=\"video\"></iframe>   \n            </div>   \n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => getTrailer({ variables: { mediaTitle: tvTrailerModalTitle }})}>Show Me The Trailer!</Button>     \n          </Modal.Footer>         \n          </Modal>\n      </>                           \n    )                               \n};\n\nexport default TvModal;"]},"metadata":{},"sourceType":"module"}