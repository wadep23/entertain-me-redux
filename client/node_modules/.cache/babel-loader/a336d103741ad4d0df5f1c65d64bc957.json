{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\entertain-me-redux\\\\client\\\\src\\\\components\\\\TV\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Row, Container, Col } from 'react-bootstrap';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { SAVE_TV_SHOW, ADD_POST } from '../../utils/mutations';\nimport { TV_API_QUERY } from '../../utils/queries';\nimport TvModal from '../TvModal';\nimport Auth from '../../utils/auth';\nimport { GiHandcuffs, GiNewspaper, GiLightSabers, GiFamilyHouse, GiSoap, GiSwordwoman, GiMagnifyingGlass } from \"react-icons/gi\";\nimport { FaLaughSquint, FaSadCry, FaChild, FaHatCowboy } from \"react-icons/fa\";\nimport { BiCameraMovie } from \"react-icons/bi\";\nimport { BsFillPeopleFill, BsPencil } from \"react-icons/bs\";\nimport { RiKakaoTalkLine } from \"react-icons/ri\";\nimport { GoLaw } from \"react-icons/go\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchShows = () => {\n  _s();\n\n  let imgLink = \"https://image.tmdb.org/t/p/w500\";\n  const [showTvTrailerModal, setShowTvTrailerModal] = useState(false);\n  const [tvTrailerModalTitle, setTvTrailerModalTitle] = useState('');\n  const [searchedMedia, setSearchedMedia] = useState([]);\n  const [savedMedia, setSavedMedia] = useState({});\n  const [getGenre, {\n    loading,\n    data\n  }] = useLazyQuery(TV_API_QUERY);\n  const [saveTvShow] = useMutation(SAVE_TV_SHOW);\n  const [createPost] = useMutation(ADD_POST);\n  useEffect(() => {\n    if (data) {\n      let tvShowData = data.tvShow.map(tvShow => ({\n        tvShowId: tvShow.id,\n        tvShowName: tvShow.name,\n        tvShowPoster: imgLink + tvShow.poster_path,\n        tvShowDetails: tvShow.overview,\n        tvShowRating: tvShow.vote_average\n      }));\n      setSearchedMedia(tvShowData);\n    }\n  }, [data, imgLink]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n  const handleSaveMedia = async tvShowId => {\n    const showToSave = searchedMedia.find(media => media.tvShowId === tvShowId);\n\n    try {\n      await saveTvShow({\n        variables: {\n          tvShowId: showToSave.tvShowId,\n          tvShowName: showToSave.tvShowName,\n          tvShowPoster: showToSave.tvShowPoster,\n          tvShowDetails: showToSave.tvShowDetails,\n          tvShowRating: showToSave.tvShowRating\n        }\n      });\n      await createPost({\n        variables: {\n          postText: ` saved ${showToSave.tvShowName} to their favorite shows!`\n        }\n      });\n      setSavedMedia([...savedMedia, showToSave.tvShowId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"return-data\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        fluid: \"true\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 10759\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(GiSwordwoman, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 27\n            }, this), \"Action/Adventure\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 16\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(BsPencil, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 26\n            }, this), \" Animation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 35\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaLaughSquint, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 27\n            }, this), \" Comedy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 80\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(GiHandcuffs, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 26\n            }, this), \" Crime\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 99\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(BiCameraMovie, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 27\n            }, this), \" Documentary\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 18\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaSadCry, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 27\n            }, this), \" Drama\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 9648\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(GiMagnifyingGlass, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 27\n            }, this), \" Mystery\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 10764\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(BsFillPeopleFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 27\n            }, this), \" Reality\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 10766\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(GiSoap, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 27\n            }, this), \" Soap\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 10767\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(RiKakaoTalkLine, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 27\n            }, this), \" Talk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 10768\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(GoLaw, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 27\n            }, this), \" War & Politics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              getGenre({\n                variables: {\n                  genre: 37\n                }\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaHatCowboy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 27\n            }, this), \" Western\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: searchedMedia.map(shows => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '18rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                src: shows.tvShowPoster,\n                alt: `The poster for ${shows.tvShowName}`,\n                variant: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: shows.tvShowName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: shows.tvShowDetails\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Rating: \", shows.tvShowRating]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: () => {\n                    handleSaveMedia(shows.tvShowId);\n                  },\n                  children: \"Save to your favorites!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: () => {\n                    setShowTvTrailerModal(true);\n                    setTvTrailerModalTitle(shows.tvShowName + \" Show Trailer\");\n                  },\n                  children: \"Watch a trailer!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this)]\n            }, shows.tvShowId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TvModal, {\n      showTvTrailerModal: showTvTrailerModal,\n      setShowTvTrailerModal: setShowTvTrailerModal,\n      tvTrailerModalTitle: tvTrailerModalTitle,\n      setTvTrailerModalTitle: setTvTrailerModalTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchShows, \"0ab9uILXoVGDHDaAuunmE6gA5s0=\", false, function () {\n  return [useLazyQuery, useMutation, useMutation];\n});\n\n_c = SearchShows;\nexport default SearchShows;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchShows\");","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/components/TV/index.js"],"names":["React","useState","useEffect","Button","Card","Row","Container","Col","useMutation","useLazyQuery","SAVE_TV_SHOW","ADD_POST","TV_API_QUERY","TvModal","Auth","GiHandcuffs","GiNewspaper","GiLightSabers","GiFamilyHouse","GiSoap","GiSwordwoman","GiMagnifyingGlass","FaLaughSquint","FaSadCry","FaChild","FaHatCowboy","BiCameraMovie","BsFillPeopleFill","BsPencil","RiKakaoTalkLine","GoLaw","SearchShows","imgLink","showTvTrailerModal","setShowTvTrailerModal","tvTrailerModalTitle","setTvTrailerModalTitle","searchedMedia","setSearchedMedia","savedMedia","setSavedMedia","getGenre","loading","data","saveTvShow","createPost","tvShowData","tvShow","map","tvShowId","id","tvShowName","name","tvShowPoster","poster_path","tvShowDetails","overview","tvShowRating","vote_average","handleSaveMedia","showToSave","find","media","variables","postText","err","console","error","genre","shows","width","loggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Row, Container, Col } from 'react-bootstrap';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { SAVE_TV_SHOW, ADD_POST } from '../../utils/mutations';\nimport { TV_API_QUERY }from '../../utils/queries';\nimport TvModal from '../TvModal';\nimport Auth from '../../utils/auth';\nimport { GiHandcuffs, GiNewspaper, GiLightSabers, GiFamilyHouse, GiSoap, GiSwordwoman, GiMagnifyingGlass } from \"react-icons/gi\";\nimport { FaLaughSquint, FaSadCry, FaChild, FaHatCowboy } from \"react-icons/fa\";\nimport { BiCameraMovie } from \"react-icons/bi\";\nimport { BsFillPeopleFill, BsPencil} from \"react-icons/bs\";\nimport { RiKakaoTalkLine } from \"react-icons/ri\";\nimport { GoLaw } from \"react-icons/go\";\n\nconst SearchShows = () => {\n    let imgLink = \"https://image.tmdb.org/t/p/w500\";\n    const [showTvTrailerModal, setShowTvTrailerModal] = useState(false);\n    const [tvTrailerModalTitle, setTvTrailerModalTitle] = useState('');\n    const [searchedMedia, setSearchedMedia] = useState([]);\n    const [savedMedia, setSavedMedia] = useState({});\n\n    const [getGenre, { loading, data }] = useLazyQuery(TV_API_QUERY);\n    \n    const [saveTvShow] = useMutation(SAVE_TV_SHOW);\n    const [createPost] = useMutation(ADD_POST);\n    \n    useEffect(() => {\n        if (data) {\n            let tvShowData = data.tvShow.map((tvShow) => ({\n                tvShowId: tvShow.id,\n                tvShowName: tvShow.name,\n                tvShowPoster: imgLink + tvShow.poster_path,\n                tvShowDetails: tvShow.overview,\n                tvShowRating: tvShow.vote_average\n            }));\n            setSearchedMedia(tvShowData) \n        }\n    }, [data, imgLink]);\n\n    if (loading) {\n        return <div>Loading...</div>\n    }\n\n    const handleSaveMedia = async (tvShowId) => {\n        const showToSave = searchedMedia.find((media) => media.tvShowId === tvShowId);\n        \n        try {\n            await saveTvShow({\n                variables: {\n                    tvShowId: showToSave.tvShowId,\n                    tvShowName: showToSave.tvShowName,\n                    tvShowPoster: showToSave.tvShowPoster,\n                    tvShowDetails: showToSave.tvShowDetails,\n                    tvShowRating: showToSave.tvShowRating\n                }\n            })\n\n            await createPost({\n                variables: {\n                  postText: ` saved ${showToSave.tvShowName} to their favorite shows!`  \n                }\n            })\n\n            setSavedMedia([...savedMedia, showToSave.tvShowId])\n            } catch (err) {\n                console.error(err);\n            }\n    };\n\n    return (\n        <div className=\"return-data\">\n            <Container>\n                <Row fluid=\"true\">\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10759 }})}}\n                         ><GiSwordwoman />Action/Adventure</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 16 }})}}\n                        ><BsPencil /> Animation</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 35 }})}}\n                         ><FaLaughSquint /> Comedy</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 80 }})}}\n                        ><GiHandcuffs /> Crime</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 99 }})}}\n                         ><BiCameraMovie /> Documentary</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 18 }})}}\n                         ><FaSadCry /> Drama</button>\n                    </Col>\n                    {/* <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10751 }})}}\n                         ><GiFamilyHouse /> Family</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10762 }})}}\n                         ><FaChild /> Kids</button>\n                    </Col> */}\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 9648 }})}}\n                         ><GiMagnifyingGlass /> Mystery</button>\n                    </Col>\n                    {/* <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10763 }})}}\n                         ><GiNewspaper /> News</button>\n                    </Col> */}\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10764 }})}}\n                         ><BsFillPeopleFill /> Reality</button>\n                    </Col>\n                    {/* <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10765 }})}}\n                         ><GiLightSabers /> Sci-Fi & Fantasy</button>\n                    </Col> */}\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10766 }})}}\n                         ><GiSoap /> Soap</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10767 }})}}\n                         ><RiKakaoTalkLine /> Talk</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 10768 }})}}\n                         ><GoLaw /> War & Politics</button>\n                    </Col>\n                    <Col>\n                        <button onClick={() => { getGenre({ variables: { genre: 37 }})}}\n                         ><FaHatCowboy /> Western</button>\n                    </Col>\n                </Row>\n                <Row>\n                    {searchedMedia.map((shows) => {\n                        return (\n                            <Col sm={3}>\n                                <Card key={shows.tvShowId} style={{ width: '18rem' }}>\n                                    <Card.Img src={shows.tvShowPoster} alt={`The poster for ${shows.tvShowName}`} variant=\"top\" />\n                                    <Card.Body className=\"card-body\">\n                                        <Card.Title>{shows.tvShowName}</Card.Title>\n                                        <Card.Text>{shows.tvShowDetails}</Card.Text>\n                                        <Card.Text>Rating: {shows.tvShowRating}</Card.Text>\n                                        {Auth.loggedIn() && (\n                                            <Button variant=\"primary\" onClick={() => {handleSaveMedia(shows.tvShowId); }}>Save to your favorites!</Button>\n                                        )}\n                                        <Button variant=\"primary\" onClick={() => {setShowTvTrailerModal(true)\n                                         setTvTrailerModalTitle(shows.tvShowName + \" Show Trailer\"); }}\n                                        >Watch a trailer!</Button>\n                                    </Card.Body>\n                                </Card>\n                            </Col>   \n                        )   \n                    })}  \n                </Row>\n            </Container>\n            <TvModal\n                showTvTrailerModal={showTvTrailerModal}\n                setShowTvTrailerModal={setShowTvTrailerModal}\n                tvTrailerModalTitle={tvTrailerModalTitle}\n                setTvTrailerModalTitle={setTvTrailerModalTitle}\n            ></TvModal>    \n        </div>\n    );\n};\n\nexport default SearchShows;"]},"metadata":{},"sourceType":"module"}