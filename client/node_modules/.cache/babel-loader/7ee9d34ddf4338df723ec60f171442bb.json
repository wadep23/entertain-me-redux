{"ast":null,"code":"// This file is all used for the idea of checking if the queried api data\n// has already been saved by the user.\nexport const getSavedIds = () => {\n  const savedMediaIds = localStorage.getItem(\"saved_media\") ? JSON.parse(localStorage.getItem(\"saved_media\")) : [];\n  return savedMediaIds;\n};\nexport const saveMediaIds = mediaIdArr => {\n  if (mediaIdArr.length) {\n    localStorage.setItem(\"saved_media\", JSON.stringify(mediaIdArr));\n  } else {\n    localStorage.removeItem(\"saved_media\");\n  }\n};\nexport const removeMediaId = mediaId => {\n  const savedMediaIds = localStorage.getItem(\"saved_media\") ? JSON.parse(localStorage.getItem(\"saved_media\")) : null;\n\n  if (!savedMediaIds) {\n    return false;\n  }\n\n  const updatedSavedMediaIds = savedMediaIds === null || savedMediaIds === void 0 ? void 0 : savedMediaIds.filter(savedMediaId => savedMediaId !== mediaId);\n  localStorage.setItem(\"saved_media\", JSON.stringify(updatedSavedMediaIds));\n  return true;\n};","map":{"version":3,"sources":["G:/projects/entertain-me-redux/client/src/utils/saveMedia.js"],"names":["getSavedIds","savedMediaIds","localStorage","getItem","JSON","parse","saveMediaIds","mediaIdArr","length","setItem","stringify","removeItem","removeMediaId","mediaId","updatedSavedMediaIds","filter","savedMediaId"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,WAAW,GAAG,MAAM;AAC/B,QAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,IAClBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADkB,GAElB,EAFJ;AAIA,SAAOF,aAAP;AACD,CANM;AAQP,OAAO,MAAMK,YAAY,GAAIC,UAAD,IAAgB;AAC1C,MAAIA,UAAU,CAACC,MAAf,EAAuB;AACrBN,IAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCL,IAAI,CAACM,SAAL,CAAeH,UAAf,CAApC;AACD,GAFD,MAEO;AACLL,IAAAA,YAAY,CAACS,UAAb,CAAwB,aAAxB;AACD;AACF,CANM;AAQP,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACxC,QAAMZ,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,IAClBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADkB,GAElB,IAFJ;;AAIA,MAAI,CAACF,aAAL,EAAoB;AAClB,WAAO,KAAP;AACD;;AAED,QAAMa,oBAAoB,GAAGb,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEc,MAAf,CAC1BC,YAAD,IAAkBA,YAAY,KAAKH,OADR,CAA7B;AAGAX,EAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCL,IAAI,CAACM,SAAL,CAAeI,oBAAf,CAApC;AAEA,SAAO,IAAP;AACD,CAfM","sourcesContent":["// This file is all used for the idea of checking if the queried api data\n// has already been saved by the user.\n\nexport const getSavedIds = () => {\n  const savedMediaIds = localStorage.getItem(\"saved_media\")\n    ? JSON.parse(localStorage.getItem(\"saved_media\"))\n    : [];\n\n  return savedMediaIds;\n};\n\nexport const saveMediaIds = (mediaIdArr) => {\n  if (mediaIdArr.length) {\n    localStorage.setItem(\"saved_media\", JSON.stringify(mediaIdArr));\n  } else {\n    localStorage.removeItem(\"saved_media\");\n  }\n};\n\nexport const removeMediaId = (mediaId) => {\n  const savedMediaIds = localStorage.getItem(\"saved_media\")\n    ? JSON.parse(localStorage.getItem(\"saved_media\"))\n    : null;\n\n  if (!savedMediaIds) {\n    return false;\n  }\n\n  const updatedSavedMediaIds = savedMediaIds?.filter(\n    (savedMediaId) => savedMediaId !== mediaId\n  );\n  localStorage.setItem(\"saved_media\", JSON.stringify(updatedSavedMediaIds));\n\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}